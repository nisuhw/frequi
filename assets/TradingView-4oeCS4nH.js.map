{"version":3,"file":"TradingView-4oeCS4nH.js","sources":["../../src/components/ftbot/PairLockList.vue","../../src/components/ftbot/BotPerformance.vue","../../src/components/ftbot/BotProfit.vue","../../src/components/ftbot/BotStatus.vue","../../src/components/ftbot/BotControls.vue","../../src/views/TradingView.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport type { Lock } from '@/types';\n\nimport { useBotStore } from '@/stores/ftbotwrapper';\nconst botStore = useBotStore();\n\nfunction removePairLock(item: Lock) {\n  console.log(item);\n  if (item.id !== undefined) {\n    botStore.activeBot.deleteLock(item.id);\n  } else {\n    showAlert('This Freqtrade version does not support deleting locks.');\n  }\n}\n</script>\n\n<template>\n  <div>\n    <div class=\"mb-2\">\n      <label class=\"me-auto text-xl\">Pair Locks</label>\n      <Button class=\"float-end\" severity=\"secondary\" @click=\"botStore.activeBot.getLocks\">\n        <template #icon>\n          <i-mdi-refresh />\n        </template>\n      </Button>\n    </div>\n    <div>\n      <DataTable size=\"small\" :items=\"botStore.activeBot.activeLocks\">\n        <Column field=\"pair\" header=\"Pair\"></Column>\n        <Column field=\"lock_end_timestamp\" header=\"Until\">\n          <template #body=\"{ data, field }\">\n            {{ timestampms(data[field]) }}\n          </template>\n        </Column>\n        <Column field=\"reason\" header=\"Reason\"></Column>\n        <Column field=\"actions\" header=\"Actions\">\n          <template #body=\"{ data }\">\n            <Button\n              class=\"btn-xs ms-1\"\n              size=\"small\"\n              severity=\"secondary\"\n              title=\"Delete Lock\"\n              @click=\"removePairLock(data as Lock)\"\n            >\n              <i-mdi-delete />\n            </Button>\n          </template>\n        </Column>\n      </DataTable>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nconst botStore = useBotStore();\nenum PerformanceOptions {\n  performance = 'performance',\n  entryStats = 'entryStats',\n  exitStats = 'exitStats',\n  mixTagStats = 'mixTagStats',\n}\nconst selectedOption = ref<PerformanceOptions>(PerformanceOptions.performance);\n\nfunction formatTextLen(text: string, len: number) {\n  if (text.length > len) {\n    return text.substring(0, len) + '...';\n  }\n  return text;\n}\n\nconst performanceTable = computed<\n  {\n    key: string;\n    label: string;\n    formatter?: (v: unknown) => string;\n  }[]\n>(() => {\n  const textLength = 17;\n  const initialCol = {\n    [PerformanceOptions.performance]: { key: 'pair', label: 'Pair' },\n    [PerformanceOptions.entryStats]: {\n      key: 'enter_tag',\n      label: 'Enter tag',\n      formatter: (v: unknown) => formatTextLen(v as string, textLength),\n    },\n    [PerformanceOptions.exitStats]: {\n      key: 'exit_reason',\n      label: 'Exit Reason',\n      formatter: (v: unknown) => formatTextLen(v as string, textLength),\n    },\n    [PerformanceOptions.mixTagStats]: {\n      key: 'mix_tag',\n      label: 'Mix Tag',\n      formatter: (v: unknown) => formatTextLen(v as string, textLength),\n    },\n  };\n  return [\n    initialCol[selectedOption.value],\n    { key: 'profit', label: 'Profit %' },\n    {\n      key: 'profit_abs',\n      label: `Profit ${botStore.activeBot.botState?.stake_currency}`,\n      formatter: (v: unknown) => formatPrice(v as number, 5),\n    },\n    { key: 'count', label: 'Count' },\n  ];\n});\n\nconst performanceData = computed(() => {\n  if (selectedOption.value === PerformanceOptions.performance) {\n    return botStore.activeBot.performanceStats;\n  }\n  if (selectedOption.value === PerformanceOptions.entryStats) {\n    return botStore.activeBot.entryStats;\n  }\n  if (selectedOption.value === PerformanceOptions.exitStats) {\n    return botStore.activeBot.exitStats;\n  }\n  if (selectedOption.value === PerformanceOptions.mixTagStats) {\n    return botStore.activeBot.mixTagStats;\n  }\n  return [];\n});\n\nconst options = [\n  { value: PerformanceOptions.performance, text: 'Performance' },\n  { value: PerformanceOptions.entryStats, text: 'Entries' },\n  { value: PerformanceOptions.exitStats, text: 'Exits' },\n  { value: PerformanceOptions.mixTagStats, text: 'Mix Tag' },\n];\n\nfunction refreshSummary() {\n  if (selectedOption.value === PerformanceOptions.performance) {\n    botStore.activeBot.getPerformance();\n  }\n  if (selectedOption.value === PerformanceOptions.entryStats) {\n    botStore.activeBot.getEntryStats();\n  }\n  if (selectedOption.value === PerformanceOptions.exitStats) {\n    botStore.activeBot.getExitStats();\n  }\n  if (selectedOption.value === PerformanceOptions.mixTagStats) {\n    botStore.activeBot.getMixTagStats();\n  }\n}\n\nonMounted(() => {\n  refreshSummary();\n});\n</script>\n<template>\n  <div>\n    <div class=\"mb-2\">\n      <h3 class=\"me-auto text-2xl inline\">Performance</h3>\n      <Button class=\"float-end\" severity=\"secondary\" @click=\"refreshSummary\">\n        <template #icon>\n          <i-mdi-refresh />\n        </template>\n      </Button>\n    </div>\n    <SelectButton\n      v-if=\"botStore.activeBot.botFeatures.hasAdvancedStats\"\n      id=\"order-direction\"\n      v-model=\"selectedOption\"\n      :options=\"options\"\n      :allow-empty=\"false\"\n      option-label=\"text\"\n      option-value=\"value\"\n      size=\"small\"\n      @change=\"refreshSummary\"\n    ></SelectButton>\n    <DataTable size=\"small\" class=\"text-center\" :value=\"performanceData\">\n      <Column\n        v-for=\"field in performanceTable\"\n        :key=\"field.key\"\n        :field=\"field.key\"\n        :header=\"field.label\"\n      >\n        <template #body=\"slotProps\">\n          {{\n            field.formatter ? field.formatter(slotProps.data[field.key]) : slotProps.data[field.key]\n          }}\n        </template>\n      </Column>\n    </DataTable>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport type { ProfitInterface } from '@/types';\n\nconst props = defineProps({\n  profit: { required: true, type: Object as () => ProfitInterface },\n  stakeCurrency: { required: true, type: String },\n  stakeCurrencyDecimals: { required: true, type: Number },\n});\n\nconst profitItems = computed(() => {\n  if (!props.profit) return [];\n  return [\n    {\n      metric: 'ROI closed trades',\n      value: props.profit.profit_closed_coin\n        ? `${formatPriceCurrency(\n            props.profit.profit_closed_coin,\n            props.stakeCurrency,\n            props.stakeCurrencyDecimals,\n          )} (${formatPercent(props.profit.profit_closed_ratio_mean, 2)})`\n        : 'N/A',\n      // (&sum; ${formatPercent(props.profit.profit_closed_ratio_sum,  2,)})`\n    },\n    {\n      metric: 'ROI all trades',\n      value: props.profit.profit_all_coin\n        ? `${formatPriceCurrency(\n            props.profit.profit_all_coin,\n            props.stakeCurrency,\n            props.stakeCurrencyDecimals,\n          )} (${formatPercent(props.profit.profit_all_ratio_mean, 2)})`\n        : 'N/A',\n      //  (&sum; ${formatPercent(props.profit.profit_all_ratio_sum,2,)})`\n    },\n\n    {\n      metric: 'Total Trade count',\n      value: `${props.profit.trade_count ?? 0}`,\n    },\n    {\n      metric: 'Bot started',\n      value: props.profit.bot_start_timestamp,\n      isTs: true,\n    },\n    {\n      metric: 'First Trade opened',\n      value: props.profit.first_trade_timestamp,\n      isTs: true,\n    },\n    {\n      metric: 'Latest Trade opened',\n      value: props.profit.latest_trade_timestamp,\n      isTs: true,\n    },\n    {\n      metric: 'Win / Loss',\n      value: `${props.profit.winning_trades ?? 0} / ${props.profit.losing_trades ?? 0}`,\n    },\n    {\n      metric: 'Winrate',\n      value: `${props.profit.winrate ? formatPercent(props.profit.winrate) : 'N/A'}`,\n    },\n    {\n      metric: 'Expectancy (ratio)',\n      value: `${props.profit.expectancy ? props.profit.expectancy.toFixed(2) : 'N/A'} (${\n        props.profit.expectancy_ratio ? props.profit.expectancy_ratio.toFixed(2) : 'N/A'\n      })`,\n    },\n    {\n      metric: 'Avg. Duration',\n      value: `${props.profit.avg_duration ?? 'N/A'}`,\n    },\n    {\n      metric: 'Best performing',\n      value: props.profit.best_pair\n        ? `${props.profit.best_pair}: ${formatPercent(props.profit.best_pair_profit_ratio, 2)}`\n        : 'N/A',\n    },\n    {\n      metric: 'Trading volume',\n      value: `${formatPriceCurrency(\n        props.profit.trading_volume ?? 0,\n        props.stakeCurrency,\n        props.stakeCurrencyDecimals,\n      )}`,\n    },\n    {\n      metric: 'Profit factor',\n      value: `${props.profit.profit_factor ? props.profit.profit_factor.toFixed(2) : 'N/A'}`,\n    },\n    {\n      metric: 'Max Drawdown',\n      value: `${props.profit.max_drawdown ? formatPercent(props.profit.max_drawdown, 2) : 'N/A'} (${\n        props.profit.max_drawdown_abs\n          ? formatPriceCurrency(\n              props.profit.max_drawdown_abs,\n              props.stakeCurrency,\n              props.stakeCurrencyDecimals,\n            )\n          : 'N/A'\n      }) ${\n        props.profit.max_drawdown_start_timestamp && props.profit.max_drawdown_end_timestamp\n          ? 'from ' +\n            timestampms(props.profit.max_drawdown_start_timestamp) +\n            ' to ' +\n            timestampms(props.profit.max_drawdown_end_timestamp)\n          : ''\n      }`,\n    },\n    {\n      metric: 'Current Drawdown',\n      value: `${props.profit.current_drawdown ? formatPercent(props.profit.current_drawdown, 2) : 'N/A'} (${\n        props.profit.current_drawdown_abs\n          ? formatPriceCurrency(\n              props.profit.current_drawdown_abs,\n              props.stakeCurrency,\n              props.stakeCurrencyDecimals,\n            )\n          : 'N/A'\n      }) ${\n        props.profit.current_drawdown_start_timestamp\n          ? 'since ' + timestampms(props.profit.current_drawdown_start_timestamp)\n          : ''\n      }`,\n    },\n  ];\n});\n</script>\n\n<template>\n  <DataTable class=\"text-start\" small borderless :value=\"profitItems\">\n    <Column field=\"metric\" header=\"Metric\"></Column>\n    <Column field=\"value\" header=\"Value\">\n      <template #body=\"{ data }\">\n        <DateTimeTZ v-if=\"data.isTs\" :date=\"data.value\" show-timezone />\n        <template v-else>\n          {{ data.value }}\n        </template>\n      </template>\n    </Column>\n  </DataTable>\n</template>\n","<script setup lang=\"ts\">\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nconst botStore = useBotStore();\n</script>\n\n<template>\n  <div v-if=\"botStore.activeBot.botState\" class=\"p-4\">\n    <p class=\"mb-4\">\n      Running Freqtrade <strong>{{ botStore.activeBot.version }}</strong>\n    </p>\n    <p class=\"mb-4\">\n      Running with\n      <strong>\n        {{ botStore.activeBot.botState.max_open_trades }}x{{\n          botStore.activeBot.botState.stake_amount\n        }}\n        {{ botStore.activeBot.botState.stake_currency }}\n      </strong>\n      on\n      <strong>{{ botStore.activeBot.botState.exchange }}</strong> in\n      <strong>{{ botStore.activeBot.botState.trading_mode || 'spot' }}</strong> markets, with\n      Strategy <strong>{{ botStore.activeBot.botState.strategy }}</strong\n      >.\n    </p>\n    <p v-if=\"'stoploss_on_exchange' in botStore.activeBot.botState\" class=\"mb-4\">\n      Stoploss on exchange is\n      <strong>{{\n        botStore.activeBot.botState.stoploss_on_exchange ? 'enabled' : 'disabled'\n      }}</strong\n      >.\n    </p>\n    <p class=\"mb-4\">\n      Currently <strong>{{ botStore.activeBot.botState.state }}</strong\n      >,\n      <strong>force entry: {{ botStore.activeBot.botState.force_entry_enable }}</strong>\n    </p>\n    <p>\n      <strong>{{ botStore.activeBot.botState.dry_run ? 'Dry-Run' : 'Live' }}</strong>\n    </p>\n    <Divider />\n    <p class=\"mb-4\">\n      Avg Profit {{ formatPercent(botStore.activeBot.profit.profit_all_ratio_mean) }} (&sum;\n      {{ formatPercent(botStore.activeBot.profit.profit_all_ratio_sum) }}) in\n      {{ botStore.activeBot.profit.trade_count }} Trades, with an average duration of\n      {{ botStore.activeBot.profit.avg_duration }}. Best pair:\n      {{ botStore.activeBot.profit.best_pair }}.\n    </p>\n    <p v-if=\"botStore.activeBot.profit.first_trade_timestamp\" class=\"mb-4\">\n      <span v-if=\"botStore.activeBot.profit.bot_start_timestamp\" class=\"block\">\n        Bot start date:\n        <strong>\n          <DateTimeTZ :date=\"botStore.activeBot.profit.bot_start_timestamp\" show-timezone />\n        </strong>\n      </span>\n      <span class=\"block\">\n        First trade opened:\n        <strong>\n          <DateTimeTZ :date=\"botStore.activeBot.profit.first_trade_timestamp\" show-timezone />\n        </strong>\n      </span>\n      <span class=\"block\">\n        Last trade opened:\n        <strong>\n          <DateTimeTZ :date=\"botStore.activeBot.profit.latest_trade_timestamp\" show-timezone />\n        </strong>\n      </span>\n    </p>\n    <p>\n      <span v-if=\"botStore.activeBot.profit.profit_factor\" class=\"block\">\n        Profit factor:\n        {{ botStore.activeBot.profit.profit_factor.toFixed(2) }}\n      </span>\n      <span v-if=\"botStore.activeBot.profit.trading_volume\" class=\"block mb-4\">\n        Trading volume:\n        {{\n          formatPriceCurrency(\n            botStore.activeBot.profit.trading_volume,\n            botStore.activeBot.botState.stake_currency,\n            botStore.activeBot.botState.stake_currency_decimals ?? 3,\n          )\n        }}\n      </span>\n    </p>\n    <BotProfit\n      class=\"mx-1\"\n      :profit=\"botStore.activeBot.profit\"\n      :stake-currency=\"botStore.activeBot.botState.stake_currency ?? 'USDT'\"\n      :stake-currency-decimals=\"botStore.activeBot.botState.stake_currency_decimals ?? 3\"\n    />\n  </div>\n</template>\n","forceexit\n<script setup lang=\"ts\">\nimport type { MsgBoxObject } from '@/components/general/MessageBox.vue';\nimport type MessageBox from '@/components/general/MessageBox.vue';\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport type { ForceSellPayload } from '@/types';\n\nimport ForceEntryForm from './ForceEntryForm.vue';\n\nconst botStore = useBotStore();\nconst forceEnter = ref<boolean>(false);\nconst msgBox = ref<typeof MessageBox>();\n\nconst isRunning = computed((): boolean => {\n  return botStore.activeBot.botState?.state === 'running';\n});\n\nconst handleStopBot = () => {\n  const msg: MsgBoxObject = {\n    title: 'Stop Bot',\n    message: 'Stop the bot loop from running?',\n    accept: () => {\n      botStore.activeBot.stopBot();\n    },\n  };\n  msgBox.value?.show(msg);\n};\n\nconst handleStopBuy = () => {\n  const msg: MsgBoxObject = {\n    title: 'Pause - Stop Entering',\n    message:\n      'Freqtrade will continue to handle open trades, but will not enter new trades or increase position sizes.',\n    accept: () => {\n      botStore.activeBot.stopBuy();\n    },\n  };\n  msgBox.value?.show(msg);\n};\n\nconst handleReloadConfig = () => {\n  const msg: MsgBoxObject = {\n    title: 'Reload',\n    message: 'Reload configuration (including strategy)?',\n    accept: () => {\n      console.log('reload...');\n      botStore.activeBot.reloadConfig();\n    },\n  };\n  msgBox.value?.show(msg);\n};\n\nconst handleForceExit = () => {\n  const msg: MsgBoxObject = {\n    title: 'ForceExit all',\n    message: 'Really forceexit ALL trades?',\n    accept: () => {\n      const payload: ForceSellPayload = {\n        tradeid: 'all',\n        // TODO: support ordertype (?)\n      };\n      botStore.activeBot.forceexit(payload);\n    },\n  };\n  msgBox.value?.show(msg);\n};\n</script>\n\n<template>\n  <div class=\"flex flex-row gap-1\">\n    <Button\n      size=\"large\"\n      severity=\"secondary\"\n      :disabled=\"!botStore.activeBot.isTrading || isRunning\"\n      title=\"Start Trading\"\n      @click=\"botStore.activeBot.startBot()\"\n    >\n      <template #icon>\n        <i-mdi-play />\n      </template>\n    </Button>\n    <Button\n      size=\"large\"\n      severity=\"secondary\"\n      :disabled=\"!botStore.activeBot.isTrading || !isRunning\"\n      title=\"Stop Trading - Also stops handling open trades.\"\n      @click=\"handleStopBot()\"\n    >\n      <template #icon>\n        <i-mdi-stop />\n      </template>\n    </Button>\n    <Button\n      size=\"large\"\n      severity=\"secondary\"\n      :disabled=\"!botStore.activeBot.isTrading || !isRunning\"\n      title=\"Pause (StopBuy) - Freqtrade will continue to handle open trades, but will not enter new trades or increase position sizes.\"\n      @click=\"handleStopBuy()\"\n    >\n      <template #icon>\n        <i-mdi-pause />\n      </template>\n    </Button>\n    <Button\n      size=\"large\"\n      severity=\"secondary\"\n      :disabled=\"!botStore.activeBot.isTrading\"\n      title=\"Reload Config - reloads configuration including strategy, resetting all settings changed on the fly.\"\n      @click=\"handleReloadConfig()\"\n    >\n      <template #icon>\n        <i-mdi-reload />\n      </template>\n    </Button>\n    <Button\n      severity=\"secondary\"\n      size=\"large\"\n      :disabled=\"!botStore.activeBot.isTrading\"\n      title=\"Force exit all\"\n      @click=\"handleForceExit()\"\n    >\n      <template #icon>\n        <i-mdi-close-box-multiple />\n      </template>\n    </Button>\n    <Button\n      v-if=\"botStore.activeBot.botState && botStore.activeBot.botState.force_entry_enable\"\n      size=\"large\"\n      severity=\"secondary\"\n      :disabled=\"!botStore.activeBot.isTrading || !isRunning\"\n      title=\"Force enter - Immediately enter a trade at an optional price. Exits are then handled according to strategy rules.\"\n      @click=\"forceEnter = true\"\n    >\n      <template #icon>\n        <i-mdi-plus-box-multiple-outline />\n      </template>\n    </Button>\n    <Button\n      v-if=\"botStore.activeBot.isWebserverMode && false\"\n      size=\"large\"\n      severity=\"secondary\"\n      :disabled=\"botStore.activeBot.isTrading\"\n      title=\"Start Trading mode\"\n      @click=\"botStore.activeBot.startTrade()\"\n    >\n      <template #icon>\n        <i-mdi-play />\n      </template>\n    </Button>\n    <ForceEntryForm v-model=\"forceEnter\" :pair=\"botStore.activeBot.selectedPair\" />\n    <MessageBox ref=\"msgBox\" />\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport type { GridItemData } from '@/types';\n\nimport { useLayoutStore, findGridLayout, TradeLayout } from '@/stores/layout';\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nconst botStore = useBotStore();\nconst layoutStore = useLayoutStore();\nconst settingsStore = useSettingsStore();\nconst currentBreakpoint = ref('');\n\nconst breakpointChanged = (newBreakpoint: string) => {\n  // console.log('breakpoint:', newBreakpoint);\n  currentBreakpoint.value = newBreakpoint;\n};\nconst isResizableLayout = computed(() =>\n  ['', 'sm', 'md', 'lg', 'xl'].includes(currentBreakpoint.value),\n);\nconst isLayoutLocked = computed(() => {\n  return layoutStore.layoutLocked || !isResizableLayout.value;\n});\nconst gridLayoutData = computed((): GridItemData[] => {\n  if (isResizableLayout.value) {\n    return layoutStore.tradingLayout;\n  }\n  return [...layoutStore.getTradingLayoutSm];\n});\n\nconst gridLayoutMultiPane = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.multiPane);\n});\n\nconst gridLayoutOpenTrades = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.openTrades);\n});\n\nconst gridLayoutTradeHistory = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.tradeHistory);\n});\n\nconst gridLayoutTradeDetail = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.tradeDetail);\n});\n\nconst gridLayoutChartView = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.chartView);\n});\n\nconst responsiveGridLayouts = computed(() => {\n  return {\n    sm: layoutStore.getTradingLayoutSm,\n  };\n});\n\nfunction refreshOHLCV(pair: string, columns: string[]) {\n  botStore.activeBot.getPairCandles({\n    pair: pair,\n    timeframe: botStore.activeBot.timeframe,\n    columns: columns,\n  });\n}\n</script>\n\n<template>\n  <GridLayout\n    class=\"h-full w-full\"\n    style=\"padding: 1px\"\n    :row-height=\"50\"\n    :layout=\"gridLayoutData\"\n    :vertical-compact=\"false\"\n    :margin=\"[1, 1]\"\n    :responsive-layouts=\"responsiveGridLayouts\"\n    :is-resizable=\"!isLayoutLocked\"\n    :is-draggable=\"!isLayoutLocked\"\n    :responsive=\"true\"\n    :cols=\"{ lg: 12, md: 12, sm: 12, xs: 4, xxs: 2 }\"\n    :col-num=\"12\"\n    @update:breakpoint=\"breakpointChanged\"\n  >\n    <template #default=\"{ gridItemProps }\">\n      <GridItem\n        v-if=\"gridLayoutMultiPane.h != 0\"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutMultiPane.i\"\n        :x=\"gridLayoutMultiPane.x\"\n        :y=\"gridLayoutMultiPane.y\"\n        :w=\"gridLayoutMultiPane.w\"\n        :h=\"gridLayoutMultiPane.h\"\n        drag-allow-from=\".drag-header\"\n      >\n        <DraggableContainer header=\"Multi Pane\">\n          <div class=\"mt-1 flex justify-center\">\n            <BotControls class=\"mt-1 mb-2\" />\n          </div>\n          <Tabs value=\"0\" scrollable lazy>\n            <TabList>\n              <Tab value=\"0\" severity=\"secondary\">\n                <div title=\"Pairs combined\">\n                  <span v-if=\"settingsStore.multiPaneButtonsShowText\" class=\"ms-1\"\n                    >Pairs combined</span\n                  >\n                  <i-mdi-view-list v-else />\n                </div>\n              </Tab>\n              <Tab value=\"1\" severity=\"secondary\">\n                <div title=\"General\">\n                  <span v-if=\"settingsStore.multiPaneButtonsShowText\" class=\"ms-1\">General</span>\n                  <i-mdi-information v-else />\n                </div>\n              </Tab>\n              <Tab value=\"2\" severity=\"secondary\">\n                <div title=\"Performance\">\n                  <span v-if=\"settingsStore.multiPaneButtonsShowText\" class=\"ms-1\"\n                    >Performance</span\n                  >\n                  <i-mdi-chart-line v-else />\n                </div>\n              </Tab>\n              <Tab value=\"3\" severity=\"secondary\">\n                <div title=\"Balance\">\n                  <span v-if=\"settingsStore.multiPaneButtonsShowText\" class=\"ms-1\">Balance</span>\n                  <i-mdi-bank v-else />\n                </div>\n              </Tab>\n              <Tab value=\"4\" severity=\"secondary\">\n                <div title=\"Time Breakdown\">\n                  <span v-if=\"settingsStore.multiPaneButtonsShowText\" class=\"ms-1\"\n                    >Time Breakdown</span\n                  >\n                  <i-mdi-folder-clock v-else />\n                </div>\n              </Tab>\n              <Tab value=\"5\" severity=\"secondary\">\n                <div title=\"Pairlist\">\n                  <span v-if=\"settingsStore.multiPaneButtonsShowText\" class=\"ms-1\">Pairlist</span>\n                  <i-mdi-format-list-group v-else />\n                </div>\n              </Tab>\n              <Tab value=\"6\" severity=\"secondary\">\n                <div title=\"Pair Locks\">\n                  <span v-if=\"settingsStore.multiPaneButtonsShowText\" class=\"ms-1\">Pair Locks</span>\n                  <i-mdi-lock-alert v-else />\n                </div>\n              </Tab>\n            </TabList>\n            <TabPanels>\n              <TabPanel value=\"0\">\n                <PairSummary\n                  :pairlist=\"botStore.activeBot.whitelist\"\n                  :current-locks=\"botStore.activeBot.activeLocks\"\n                  :trades=\"botStore.activeBot.openTrades\"\n                />\n              </TabPanel>\n              <TabPanel value=\"1\">\n                <BotStatus />\n              </TabPanel>\n              <TabPanel value=\"2\" lazy>\n                <BotPerformance />\n              </TabPanel>\n              <TabPanel value=\"3\" lazy>\n                <BotBalance />\n              </TabPanel>\n              <TabPanel value=\"4\" lazy>\n                <PeriodBreakdown />\n              </TabPanel>\n\n              <TabPanel value=\"5\" lazy>\n                <PairListLive />\n              </TabPanel>\n              <TabPanel value=\"6\" lazy>\n                <PairLockList />\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </DraggableContainer>\n      </GridItem>\n      <GridItem\n        v-if=\"gridLayoutOpenTrades.h != 0\"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutOpenTrades.i\"\n        :x=\"gridLayoutOpenTrades.x\"\n        :y=\"gridLayoutOpenTrades.y\"\n        :w=\"gridLayoutOpenTrades.w\"\n        :h=\"gridLayoutOpenTrades.h\"\n        drag-allow-from=\".drag-header\"\n      >\n        <DraggableContainer header=\"Open Trades\">\n          <TradeList\n            class=\"open-trades\"\n            :trades=\"botStore.activeBot.openTrades\"\n            title=\"Open trades\"\n            :active-trades=\"true\"\n            empty-text=\"Currently no open trades.\"\n          />\n        </DraggableContainer>\n      </GridItem>\n      <GridItem\n        v-if=\"gridLayoutTradeHistory.h != 0\"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutTradeHistory.i\"\n        :x=\"gridLayoutTradeHistory.x\"\n        :y=\"gridLayoutTradeHistory.y\"\n        :w=\"gridLayoutTradeHistory.w\"\n        :h=\"gridLayoutTradeHistory.h\"\n        drag-allow-from=\".drag-header\"\n      >\n        <DraggableContainer header=\"Closed Trades\">\n          <TradeList\n            class=\"trade-history\"\n            :trades=\"botStore.activeBot.closedTrades\"\n            title=\"Trade history\"\n            :show-filter=\"true\"\n            empty-text=\"No closed trades so far.\"\n          />\n        </DraggableContainer>\n      </GridItem>\n      <GridItem\n        v-if=\"\n          botStore.activeBot.detailTradeId &&\n          botStore.activeBot.tradeDetail &&\n          gridLayoutTradeDetail.h != 0\n        \"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutTradeDetail.i\"\n        :x=\"gridLayoutTradeDetail.x\"\n        :y=\"gridLayoutTradeDetail.y\"\n        :w=\"gridLayoutTradeDetail.w\"\n        :h=\"gridLayoutTradeDetail.h\"\n        :min-h=\"4\"\n        drag-allow-from=\".drag-header\"\n      >\n        <DraggableContainer header=\"Trade Detail\">\n          <TradeDetail\n            :trade=\"botStore.activeBot.tradeDetail\"\n            :stake-currency=\"botStore.activeBot.stakeCurrency\"\n          />\n        </DraggableContainer>\n      </GridItem>\n      <GridItem\n        v-if=\"gridLayoutTradeDetail.h != 0\"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutChartView.i\"\n        :x=\"gridLayoutChartView.x\"\n        :y=\"gridLayoutChartView.y\"\n        :w=\"gridLayoutChartView.w\"\n        :h=\"gridLayoutChartView.h\"\n        :min-h=\"6\"\n        drag-allow-from=\".drag-header\"\n      >\n        <DraggableContainer header=\"Chart\">\n          <CandleChartContainer\n            :available-pairs=\"botStore.activeBot.whitelist\"\n            :historic-view=\"!!false\"\n            :timeframe=\"botStore.activeBot.timeframe\"\n            :trades=\"botStore.activeBot.allTrades\"\n            @refresh-data=\"refreshOHLCV\"\n          >\n          </CandleChartContainer>\n        </DraggableContainer>\n      </GridItem>\n    </template>\n  </GridLayout>\n</template>\n"],"names":["botStore","useBotStore","removePairLock","item","showAlert","_createElementBlock","_createElementVNode","_hoisted_1","_cache","_createVNode","_component_Button","_unref","_component_i_mdi_refresh","_component_DataTable","_component_Column","_withCtx","data","field","timestampms","$event","_component_i_mdi_delete","selectedOption","ref","formatTextLen","text","len","performanceTable","computed","v","formatPrice","performanceData","options","refreshSummary","onMounted","_createBlock","_component_SelectButton","_Fragment","_renderList","slotProps","props","__props","profitItems","formatPriceCurrency","formatPercent","_component_DateTimeTZ","_createTextVNode","_toDisplayString","_openBlock","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_component_Divider","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_component_BotProfit","forceEnter","msgBox","isRunning","handleStopBot","msg","handleStopBuy","handleReloadConfig","handleForceExit","payload","_component_i_mdi_play","_component_i_mdi_stop","_component_i_mdi_pause","_component_i_mdi_reload","_component_i_mdi_close_box_multiple","_component_i_mdi_plus_box_multiple_outline","ForceEntryForm","_component_MessageBox","layoutStore","useLayoutStore","settingsStore","useSettingsStore","currentBreakpoint","breakpointChanged","newBreakpoint","isResizableLayout","isLayoutLocked","gridLayoutData","gridLayoutMultiPane","findGridLayout","TradeLayout","gridLayoutOpenTrades","gridLayoutTradeHistory","gridLayoutTradeDetail","gridLayoutChartView","responsiveGridLayouts","refreshOHLCV","pair","columns","_component_GridLayout","gridItemProps","_component_GridItem","_mergeProps","_component_DraggableContainer","_component_BotControls","_component_Tabs","_component_TabList","_component_Tab","_component_i_mdi_view_list","_component_i_mdi_information","_component_i_mdi_chart_line","_component_i_mdi_bank","_component_i_mdi_folder_clock","_hoisted_13","_component_i_mdi_format_list_group","_hoisted_14","_hoisted_15","_component_i_mdi_lock_alert","_component_TabPanels","_component_TabPanel","_component_PairSummary","_component_BotStatus","_component_BotPerformance","_component_BotBalance","_component_PeriodBreakdown","_component_PairListLive","_component_PairLockList","_component_TradeList","_component_TradeDetail","_component_CandleChartContainer"],"mappings":"w/CAIA,MAAMA,EAAWC,EAAA,EAEjB,SAASC,EAAeC,EAAY,CAClC,QAAQ,IAAIA,CAAI,EACZA,EAAK,KAAO,OACdH,EAAS,UAAU,WAAWG,EAAK,EAAE,EAErCC,GAAU,yDAAyD,CAEvE,qDAIEC,EAiCM,MAAA,KAAA,CAhCJC,EAOM,MAPNC,GAOM,CANJC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAF,EAAiD,QAAA,CAA1C,MAAM,iBAAA,EAAkB,aAAU,EAAA,GACzCG,EAISC,EAAA,CAJD,MAAM,YAAY,SAAS,YAAa,QAAOC,EAAAX,CAAA,EAAS,UAAU,QAAA,GAC7D,OACT,IAAiB,CAAjBS,EAAiBG,CAAA,CAAA,yBAIvBN,EAuBM,MAAA,KAAA,CAtBJG,EAqBYI,EAAA,CArBD,KAAK,QAAS,MAAOF,EAAAX,CAAA,EAAS,UAAU,WAAA,aACjD,IAA4C,CAA5CS,EAA4CK,EAAA,CAApC,MAAM,OAAO,OAAO,MAAA,GAC5BL,EAISK,EAAA,CAJD,MAAM,qBAAqB,OAAO,OAAA,GAC7B,KAAIC,EACb,CAA8B,CADb,KAAAC,EAAM,MAAAC,KAAK,MACzBC,gBAAAA,EAAAA,EAAAA,YAAAA,EAAAA,CAAAA,GAAYF,EAAKC,CAAK,CAAA,CAAA,EAAA,CAAA,CAAA,SAG7BR,EAAgDK,EAAA,CAAxC,MAAM,SAAS,OAAO,QAAA,GAC9BL,EAYSK,EAAA,CAZD,MAAM,UAAU,OAAO,SAAA,GAClB,KAAIC,EACb,CAQS,CATQ,KAAAC,KAAI,CACrBP,EAQSC,EAAA,CAPP,MAAM,cACN,KAAK,QACL,SAAS,YACT,MAAM,cACL,QAAKS,GAAEjB,EAAec,CAAI,CAAA,aAE3B,IAAgB,CAAhBP,EAAgBW,CAAA,CAAA,uHCzC9B,MAAMpB,EAAWC,EAAA,EAOXoB,EAAiBC,EAAwB,aAAA,EAE/C,SAASC,EAAcC,EAAcC,EAAa,CAChD,OAAID,EAAK,OAASC,EACTD,EAAK,UAAU,EAAGC,CAAG,EAAI,MAE3BD,CACT,CAEA,MAAME,EAAmBC,EAMvB,IAoBO,CAlBY,CAChB,YAAiC,CAAE,IAAK,OAAQ,MAAO,MAAA,EACvD,WAAgC,CAC/B,IAAK,YACL,MAAO,YACP,UAAYC,GAAeL,EAAcK,EAAa,EAAU,CAAA,EAEjE,UAA+B,CAC9B,IAAK,cACL,MAAO,cACP,UAAYA,GAAeL,EAAcK,EAAa,EAAU,CAAA,EAEjE,YAAiC,CAChC,IAAK,UACL,MAAO,UACP,UAAYA,GAAeL,EAAcK,EAAa,EAAU,CAAA,CAClE,EAGWP,EAAe,KAAK,EAC/B,CAAE,IAAK,SAAU,MAAO,UAAA,EACxB,CACE,IAAK,aACL,MAAO,UAAUrB,EAAS,UAAU,UAAU,cAAc,GAC5D,UAAY4B,GAAeC,GAAYD,EAAa,CAAC,CAAA,EAEvD,CAAE,IAAK,QAAS,MAAO,OAAA,CAAQ,CAElC,EAEKE,EAAkBH,EAAS,IAC3BN,EAAe,QAAU,cACpBrB,EAAS,UAAU,iBAExBqB,EAAe,QAAU,aACpBrB,EAAS,UAAU,WAExBqB,EAAe,QAAU,YACpBrB,EAAS,UAAU,UAExBqB,EAAe,QAAU,cACpBrB,EAAS,UAAU,YAErB,CAAA,CACR,EAEK+B,EAAU,CACd,CAAE,MAAO,cAAgC,KAAM,aAAA,EAC/C,CAAE,MAAO,aAA+B,KAAM,SAAA,EAC9C,CAAE,MAAO,YAA8B,KAAM,OAAA,EAC7C,CAAE,MAAO,cAAgC,KAAM,SAAA,CAAU,EAG3D,SAASC,GAAiB,CACpBX,EAAe,QAAU,eAC3BrB,EAAS,UAAU,eAAA,EAEjBqB,EAAe,QAAU,cAC3BrB,EAAS,UAAU,cAAA,EAEjBqB,EAAe,QAAU,aAC3BrB,EAAS,UAAU,aAAA,EAEjBqB,EAAe,QAAU,eAC3BrB,EAAS,UAAU,eAAA,CAEvB,CAEA,OAAAiC,GAAU,IAAM,CACdD,EAAA,CACF,CAAC,gDAGC3B,EAkCM,MAAA,KAAA,CAjCJC,EAOM,MAPNC,GAOM,CANJC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAF,EAAoD,KAAA,CAAhD,MAAM,yBAAA,EAA0B,cAAW,EAAA,GAC/CG,EAISC,EAAA,CAJD,MAAM,YAAY,SAAS,YAAa,QAAOsB,CAAA,GAC1C,OACT,IAAiB,CAAjBvB,EAAiBG,CAAA,CAAA,WAKfD,EAAAX,CAAA,EAAS,UAAU,YAAY,sBADvCkC,EAUgBC,EAAA,OARd,GAAG,6BACMxB,EAAAU,CAAA,4CAAAA,EAAc,MAAAF,EAAA,MACtB,QAAAY,EACA,cAAa,GACd,eAAa,OACb,eAAa,QACb,KAAK,QACJ,SAAQC,CAAA,mCAEXvB,EAaYI,EAAA,CAbD,KAAK,QAAQ,MAAM,cAAe,MAAOF,EAAAmB,CAAA,CAAA,aAEhD,IAAiC,QADnCzB,EAWS+B,EAAA,KAAAC,GAVS1B,EAAAe,CAAA,EAATT,QADTiB,EAWSpB,EAAA,CATN,IAAKG,EAAM,IACX,MAAOA,EAAM,IACb,OAAQA,EAAM,KAAA,GAEJ,KAAIF,EAGXuB,GAHsB,KAEtBrB,EAAM,UAAYA,EAAM,UAAUqB,EAAU,KAAKrB,EAAM,GAAG,CAAA,EAAKqB,EAAU,KAAKrB,EAAM,GAAG,CAAA,EAAA,CAAA,CAAA,sOC9HnG,MAAMsB,EAAQC,EAMRC,EAAcd,EAAS,IACtBY,EAAM,OACJ,CACL,CACE,OAAQ,oBACR,MAAOA,EAAM,OAAO,mBAChB,GAAGG,EACDH,EAAM,OAAO,mBACbA,EAAM,cACNA,EAAM,qBAAA,CACP,KAAKI,EAAcJ,EAAM,OAAO,yBAA0B,CAAC,CAAC,IAC7D,KAAA,EAGN,CACE,OAAQ,iBACR,MAAOA,EAAM,OAAO,gBAChB,GAAGG,EACDH,EAAM,OAAO,gBACbA,EAAM,cACNA,EAAM,qBAAA,CACP,KAAKI,EAAcJ,EAAM,OAAO,sBAAuB,CAAC,CAAC,IAC1D,KAAA,EAIN,CACE,OAAQ,oBACR,MAAO,GAAGA,EAAM,OAAO,aAAe,CAAC,EAAA,EAEzC,CACE,OAAQ,cACR,MAAOA,EAAM,OAAO,oBACpB,KAAM,EAAA,EAER,CACE,OAAQ,qBACR,MAAOA,EAAM,OAAO,sBACpB,KAAM,EAAA,EAER,CACE,OAAQ,sBACR,MAAOA,EAAM,OAAO,uBACpB,KAAM,EAAA,EAER,CACE,OAAQ,aACR,MAAO,GAAGA,EAAM,OAAO,gBAAkB,CAAC,MAAMA,EAAM,OAAO,eAAiB,CAAC,EAAA,EAEjF,CACE,OAAQ,UACR,MAAO,GAAGA,EAAM,OAAO,QAAUI,EAAcJ,EAAM,OAAO,OAAO,EAAI,KAAK,EAAA,EAE9E,CACE,OAAQ,qBACR,MAAO,GAAGA,EAAM,OAAO,WAAaA,EAAM,OAAO,WAAW,QAAQ,CAAC,EAAI,KAAK,KAC5EA,EAAM,OAAO,iBAAmBA,EAAM,OAAO,iBAAiB,QAAQ,CAAC,EAAI,KAC7E,GAAA,EAEF,CACE,OAAQ,gBACR,MAAO,GAAGA,EAAM,OAAO,cAAgB,KAAK,EAAA,EAE9C,CACE,OAAQ,kBACR,MAAOA,EAAM,OAAO,UAChB,GAAGA,EAAM,OAAO,SAAS,KAAKI,EAAcJ,EAAM,OAAO,uBAAwB,CAAC,CAAC,GACnF,KAAA,EAEN,CACE,OAAQ,iBACR,MAAO,GAAGG,EACRH,EAAM,OAAO,gBAAkB,EAC/BA,EAAM,cACNA,EAAM,qBAAA,CACP,EAAA,EAEH,CACE,OAAQ,gBACR,MAAO,GAAGA,EAAM,OAAO,cAAgBA,EAAM,OAAO,cAAc,QAAQ,CAAC,EAAI,KAAK,EAAA,EAEtF,CACE,OAAQ,eACR,MAAO,GAAGA,EAAM,OAAO,aAAeI,EAAcJ,EAAM,OAAO,aAAc,CAAC,EAAI,KAAK,KACvFA,EAAM,OAAO,iBACTG,EACEH,EAAM,OAAO,iBACbA,EAAM,cACNA,EAAM,qBAAA,EAER,KACN,KACEA,EAAM,OAAO,8BAAgCA,EAAM,OAAO,2BACtD,QACArB,EAAYqB,EAAM,OAAO,4BAA4B,EACrD,OACArB,EAAYqB,EAAM,OAAO,0BAA0B,EACnD,EACN,EAAA,EAEF,CACE,OAAQ,mBACR,MAAO,GAAGA,EAAM,OAAO,iBAAmBI,EAAcJ,EAAM,OAAO,iBAAkB,CAAC,EAAI,KAAK,KAC/FA,EAAM,OAAO,qBACTG,EACEH,EAAM,OAAO,qBACbA,EAAM,cACNA,EAAM,qBAAA,EAER,KACN,KACEA,EAAM,OAAO,iCACT,SAAWrB,EAAYqB,EAAM,OAAO,gCAAgC,EACpE,EACN,EAAA,CACF,EAlHwB,CAAA,CAoH3B,8CAICL,EAUYrB,EAAA,CAVD,MAAM,aAAa,MAAA,GAAM,WAAA,GAAY,MAAOF,EAAA8B,CAAA,CAAA,aACrD,IAAgD,CAAhDhC,EAAgDK,EAAA,CAAxC,MAAM,SAAS,OAAO,QAAA,GAC9BL,EAOSK,EAAA,CAPD,MAAM,QAAQ,OAAO,OAAA,GAChB,KAAIC,EACb,CAAgE,CAD/C,KAAAC,KAAI,CACHA,EAAK,UAAvBkB,EAAgEU,EAAA,OAAlC,KAAM5B,EAAK,MAAO,gBAAA,EAAA,yBAChDX,EAEW+B,EAAA,CAAA,IAAA,GAAA,CADNS,EAAAC,EAAA9B,EAAK,KAAK,EAAA,CAAA,CAAA,8UCrIvB,MAAMhB,EAAWC,EAAA,4CAIJU,EAAAX,CAAA,EAAS,UAAU,UAA9B+C,IAAA1C,EAmFM,MAnFNE,GAmFM,CAlFJD,EAEI,IAFJ0C,GAEI,eAFY,qBACI,GAAA1C,EAAiD,SAAA,KAAAwC,EAAtCnC,EAAAX,CAAA,EAAS,UAAU,OAAO,EAAA,CAAA,CAAA,GAEzDM,EAaI,IAbJ2C,GAaI,eAbY,gBAEd,GAAA3C,EAKS,SAAA,KAAAwC,EAJJnC,EAAAX,CAAA,EAAS,UAAU,SAAS,eAAe,EAAG,IAAC8C,EAChDnC,EAAAX,CAAA,EAAS,UAAU,SAAS,YAAY,EACxC,IACF8C,EAAGnC,EAAAX,CAAA,EAAS,UAAU,SAAS,cAAc,EAAA,CAAA,gBACtC,MAET,GAAAM,EAA2D,gBAAhDK,EAAAX,CAAA,EAAS,UAAU,SAAS,QAAQ,EAAA,CAAA,gBAAY,MAC3D,GAAAM,EAAyE,gBAA9DK,EAAAX,CAAA,EAAS,UAAU,SAAS,cAAY,MAAA,EAAA,CAAA,gBAAsB,0BAChE,GAAAM,EACR,gBADmBK,EAAAX,CAAA,EAAS,UAAU,SAAS,QAAQ,EAAA,CAAA,gBACvD,IACH,EAAA,4BACmCW,EAAAX,CAAA,EAAS,UAAU,UAAtD+C,IAAA1C,EAMI,IANJ6C,GAMI,eANyE,2BAE3E,GAAA5C,EAGC,gBAFCK,EAAAX,CAAA,EAAS,UAAU,SAAS,qBAAoB,UAAA,UAAA,EAAA,CAAA,gBAEjD,IACH,EAAA,aACAM,EAII,IAJJ6C,GAII,eAJY,aACJ,GAAA7C,EACT,gBADoBK,EAAAX,CAAA,EAAS,UAAU,SAAS,KAAK,EAAA,CAAA,gBACrD,IACD,GAAAM,EAAkF,SAAA,KAA1E,gBAAawC,EAAGnC,EAAAX,CAAA,EAAS,UAAU,SAAS,kBAAkB,EAAA,CAAA,CAAA,GAExEM,EAEI,IAAA,KAAA,CADFA,EAA+E,gBAApEK,EAAAX,CAAA,EAAS,UAAU,SAAS,QAAO,UAAA,MAAA,EAAA,CAAA,CAAA,GAEhDS,EAAW2C,CAAA,EACX9C,EAMI,IANJ+C,GAAgB,eACHP,GAAGH,kBAAAA,EAAAA,EAAAA,cAAAA,EAAAA,CAAAA,GAAchC,EAAAX,CAAA,EAAS,UAAU,OAAO,qBAAqB,CAAA,EAAI,OAC/E8C,GAAGH,kBAAAA,EAAAA,EAAAA,cAAAA,EAAAA,CAAAA,GAAchC,EAAAX,CAAA,EAAS,UAAU,OAAO,oBAAoB,CAAA,EAAI,UAChEW,EAAAX,CAAA,EAAS,UAAU,OAAO,WAAW,EAAG,wCAC3C8C,EAAGnC,EAAAX,CAAA,EAAS,UAAU,OAAO,YAAY,EAAG,gBAC5C8C,EAAGnC,EAAAX,CAAA,EAAS,UAAU,OAAO,SAAS,EAAG,KAC3C,CAAA,EACSW,EAAAX,CAAA,EAAS,UAAU,OAAO,uBAAnC+C,IAAA1C,EAmBI,IAnBJiD,GAmBI,CAlBU3C,EAAAX,CAAA,EAAS,UAAU,OAAO,qBAAtC+C,IAAA1C,EAKO,OALPkD,GAKO,iBALkE,mBAEvE,GAAAjD,EAES,SAAA,KAAA,CADPG,EAAkFmC,EAAA,CAArE,KAAMjC,EAAAX,CAAA,EAAS,UAAU,OAAO,oBAAqB,gBAAA,EAAA,iCAGtEM,EAKO,OALPkD,GAKO,iBALa,uBAElB,GAAAlD,EAES,SAAA,KAAA,CADPG,EAAoFmC,EAAA,CAAvE,KAAMjC,EAAAX,CAAA,EAAS,UAAU,OAAO,sBAAuB,gBAAA,EAAA,uBAGxEM,EAKO,OALPmD,GAKO,iBALa,sBAElB,GAAAnD,EAES,SAAA,KAAA,CADPG,EAAqFmC,EAAA,CAAxE,KAAMjC,EAAAX,CAAA,EAAS,UAAU,OAAO,uBAAwB,gBAAA,EAAA,mCAI3EM,EAeI,IAAA,KAAA,CAdUK,EAAAX,CAAA,EAAS,UAAU,OAAO,eAAtC+C,EAAA,EAAA1C,EAGO,OAHPqD,GAAmE,mBAEjEZ,EAAGnC,EAAAX,CAAA,EAAS,UAAU,OAAO,cAAc,QAAO,CAAA,CAAA,EAAA,CAAA,YAExCW,EAAAX,CAAA,EAAS,UAAU,OAAO,gBAAtC+C,EAAA,EAAA1C,EASO,OATPsD,GAAyE,uBAGrEjB,wBAAAA,EAAAA,EAAAA,oBAAAA,EAAAA,CAAAA,GAAiC/B,EAAAX,CAAA,EAAS,UAAU,OAAO,eAA4BW,EAAAX,CAAA,EAAS,UAAU,SAAS,eAA4BW,EAAAX,CAAA,EAAS,UAAU,SAAS,yBAAuB,CAAA,kBAQxMS,EAKEmD,EAAA,CAJA,MAAM,OACL,OAAQjD,EAAAX,CAAA,EAAS,UAAU,OAC3B,iBAAgBW,EAAAX,CAAA,EAAS,UAAU,SAAS,gBAAc,OAC1D,0BAAyBW,EAAAX,CAAA,EAAS,UAAU,SAAS,yBAAuB,CAAA,mxFC/EnF,MAAMA,EAAWC,EAAA,EACX4D,EAAavC,EAAa,EAAK,EAC/BwC,EAASxC,EAAA,EAETyC,EAAYpC,EAAS,IAClB3B,EAAS,UAAU,UAAU,QAAU,SAC/C,EAEKgE,EAAgB,IAAM,CAC1B,MAAMC,EAAoB,CACxB,MAAO,WACP,QAAS,kCACT,OAAQ,IAAM,CACZjE,EAAS,UAAU,QAAA,CACrB,CAAA,EAEF8D,EAAO,OAAO,KAAKG,CAAG,CACxB,EAEMC,EAAgB,IAAM,CAC1B,MAAMD,EAAoB,CACxB,MAAO,wBACP,QACE,2GACF,OAAQ,IAAM,CACZjE,EAAS,UAAU,QAAA,CACrB,CAAA,EAEF8D,EAAO,OAAO,KAAKG,CAAG,CACxB,EAEME,EAAqB,IAAM,CAC/B,MAAMF,EAAoB,CACxB,MAAO,SACP,QAAS,6CACT,OAAQ,IAAM,CACZ,QAAQ,IAAI,WAAW,EACvBjE,EAAS,UAAU,aAAA,CACrB,CAAA,EAEF8D,EAAO,OAAO,KAAKG,CAAG,CACxB,EAEMG,EAAkB,IAAM,CAC5B,MAAMH,EAAoB,CACxB,MAAO,gBACP,QAAS,+BACT,OAAQ,IAAM,CACZ,MAAMI,EAA4B,CAChC,QAAS,KAAA,EAGXrE,EAAS,UAAU,UAAUqE,CAAO,CACtC,CAAA,EAEFP,EAAO,OAAO,KAAKG,CAAG,CACxB,6DAIE,OAAAlB,EAAA,EAAA1C,EAkFM,MAlFNE,GAkFM,CAjFJE,EAUSC,EAAA,CATP,KAAK,QACL,SAAS,YACR,UAAWC,EAAAX,CAAA,EAAS,UAAU,WAAaW,EAAAoD,CAAA,EAC5C,MAAM,gBACL,QAAKvD,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAW,GAAER,EAAAX,CAAA,EAAS,UAAU,SAAA,EAAQ,GAExB,OACT,IAAc,CAAdS,EAAc6D,CAAA,CAAA,wBAGlB7D,EAUSC,EAAA,CATP,KAAK,QACL,SAAS,YACR,UAAWC,EAAAX,CAAA,EAAS,UAAU,YAAcW,EAAAoD,CAAA,EAC7C,MAAM,kDACL,uBAAOC,EAAA,EAAa,GAEV,OACT,IAAc,CAAdvD,EAAc8D,CAAA,CAAA,wBAGlB9D,EAUSC,EAAA,CATP,KAAK,QACL,SAAS,YACR,UAAWC,EAAAX,CAAA,EAAS,UAAU,YAAcW,EAAAoD,CAAA,EAC7C,MAAM,6HACL,uBAAOG,EAAA,EAAa,GAEV,OACT,IAAe,CAAfzD,EAAe+D,CAAA,CAAA,wBAGnB/D,EAUSC,EAAA,CATP,KAAK,QACL,SAAS,YACR,SAAQ,CAAGC,EAAAX,CAAA,EAAS,UAAU,UAC/B,MAAM,uGACL,uBAAOmE,EAAA,EAAkB,GAEf,OACT,IAAgB,CAAhB1D,EAAgBgE,CAAA,CAAA,wBAGpBhE,EAUSC,EAAA,CATP,SAAS,YACT,KAAK,QACJ,SAAQ,CAAGC,EAAAX,CAAA,EAAS,UAAU,UAC/B,MAAM,iBACL,uBAAOoE,EAAA,EAAe,GAEZ,OACT,IAA4B,CAA5B3D,EAA4BiE,CAAA,CAAA,wBAIxB/D,EAAAX,CAAA,EAAS,UAAU,UAAYW,EAAAX,CAAA,EAAS,UAAU,SAAS,wBADnEkC,EAWSxB,EAAA,OATP,KAAK,QACL,SAAS,YACR,UAAWC,EAAAX,CAAA,EAAS,UAAU,YAAcW,EAAAoD,CAAA,EAC7C,MAAM,oHACL,uBAAOF,EAAA,MAAU,GAAA,GAEP,OACT,IAAmC,CAAnCpD,EAAmCkE,CAAA,CAAA,mCAI/BhE,EAAAX,CAAA,EAAS,UAAU,0BAW3BS,EAA+EmE,GAAA,YAAtDjE,EAAAkD,CAAA,4CAAAA,EAAU,MAAA1C,EAAA,MAAG,KAAMR,EAAAX,CAAA,EAAS,UAAU,YAAA,gCAC/DS,EAA2BoE,EAAA,SAAX,SAAJ,IAAIf,CAAA,6aChJpB,MAAM9D,EAAWC,EAAA,EACX6E,EAAcC,GAAA,EACdC,EAAgBC,GAAA,EAChBC,EAAoB5D,EAAI,EAAE,EAE1B6D,EAAqBC,GAA0B,CAEnDF,EAAkB,MAAQE,CAC5B,EACMC,EAAoB1D,EAAS,IACjC,CAAC,GAAI,KAAM,KAAM,KAAM,IAAI,EAAE,SAASuD,EAAkB,KAAK,CAAA,EAEzDI,EAAiB3D,EAAS,IACvBmD,EAAY,cAAgB,CAACO,EAAkB,KACvD,EACKE,EAAiB5D,EAAS,IAC1B0D,EAAkB,MACbP,EAAY,cAEd,CAAC,GAAGA,EAAY,kBAAkB,CAC1C,EAEKU,EAAsB7D,EAAS,IAC5B8D,EAAeF,EAAe,MAAOG,EAAY,SAAS,CAClE,EAEKC,EAAuBhE,EAAS,IAC7B8D,EAAeF,EAAe,MAAOG,EAAY,UAAU,CACnE,EAEKE,EAAyBjE,EAAS,IAC/B8D,EAAeF,EAAe,MAAOG,EAAY,YAAY,CACrE,EAEKG,EAAwBlE,EAAS,IAC9B8D,EAAeF,EAAe,MAAOG,EAAY,WAAW,CACpE,EAEKI,EAAsBnE,EAAS,IAC5B8D,EAAeF,EAAe,MAAOG,EAAY,SAAS,CAClE,EAEKK,EAAwBpE,EAAS,KAC9B,CACL,GAAImD,EAAY,kBAAA,EAEnB,EAED,SAASkB,EAAaC,EAAcC,EAAmB,CACrDlG,EAAS,UAAU,eAAe,CAChC,KAAAiG,EACA,UAAWjG,EAAS,UAAU,UAC9B,QAAAkG,CAAA,CACD,CACH,6MAIEhE,EAqMaiE,GAAA,CApMX,MAAM,gBACN,MAAA,CAAA,QAAA,KAAA,EACC,aAAY,GACZ,OAAQxF,EAAA4E,CAAA,EACR,mBAAkB,GAClB,OAAQ,CAAA,EAAA,CAAA,EACR,qBAAoB5E,EAAAoF,CAAA,EACpB,gBAAepF,EAAA2E,CAAA,EACf,gBAAe3E,EAAA2E,CAAA,EACf,WAAY,GACZ,KAAM,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,IAAA,CAAA,EACN,UAAS,GACT,sBAAmBH,CAAA,GAET,QAAOpE,EAChB,CA+FW,CAhGS,cAAAqF,KAAa,CAEzBzF,EAAA6E,CAAA,EAAoB,GAAC,OAD7BtD,EA+FWmE,EA/FXC,EA+FW,CAAA,IAAA,CAAA,EA7FDF,EAAa,CACpB,EAAGzF,EAAA6E,CAAA,EAAoB,EACvB,EAAG7E,EAAA6E,CAAA,EAAoB,EACvB,EAAG7E,EAAA6E,CAAA,EAAoB,EACvB,EAAG7E,EAAA6E,CAAA,EAAoB,EACvB,EAAG7E,EAAA6E,CAAA,EAAoB,EACxB,kBAAgB,cAAA,cAEhB,IAoFqB,CApFrB/E,EAoFqB8F,EAAA,CApFD,OAAO,cAAY,WACrC,IAEM,CAFNjG,EAEM,MAFNC,GAEM,CADJE,EAAiC+F,EAAA,CAApB,MAAM,YAAW,CAAA,GAEhC/F,EA+EOgG,GAAA,CA/ED,MAAM,IAAI,WAAA,GAAW,KAAA,EAAA,aACzB,IAiDU,CAjDVhG,EAiDUiG,GAAA,KAAA,WAhDR,IAOM,CAPNjG,EAOMkG,EAAA,CAPD,MAAM,IAAI,SAAS,WAAA,aACtB,IAKM,CALNrG,EAKM,MALN0C,GAKM,CAJQrC,EAAAqE,CAAA,EAAc,8BAA1B3E,EAEC,OAFD4C,GACG,gBAAc,QAEjBf,EAA0B0E,EAAA,CAAA,IAAA,EAAA,EAAA,WAG9BnG,EAKMkG,EAAA,CALD,MAAM,IAAI,SAAS,WAAA,aACtB,IAGM,CAHNrG,EAGM,MAHN4C,GAGM,CAFQvC,EAAAqE,CAAA,EAAc,8BAA1B3E,EAA+E,OAA/E8C,GAAiE,SAAO,QACxEjB,EAA4B2E,GAAA,CAAA,IAAA,EAAA,EAAA,WAGhCpG,EAOMkG,EAAA,CAPD,MAAM,IAAI,SAAS,WAAA,aACtB,IAKM,CALNrG,EAKM,MALN+C,GAKM,CAJQ1C,EAAAqE,CAAA,EAAc,8BAA1B3E,EAEC,OAFDiD,GACG,aAAW,QAEdpB,EAA2B4E,GAAA,CAAA,IAAA,EAAA,EAAA,WAG/BrG,EAKMkG,EAAA,CALD,MAAM,IAAI,SAAS,WAAA,aACtB,IAGM,CAHNrG,EAGM,MAHNiD,GAGM,CAFQ5C,EAAAqE,CAAA,EAAc,8BAA1B3E,EAA+E,OAA/EmD,GAAiE,SAAO,QACxEtB,EAAqB6E,GAAA,CAAA,IAAA,EAAA,EAAA,WAGzBtG,EAOMkG,EAAA,CAPD,MAAM,IAAI,SAAS,WAAA,aACtB,IAKM,CALNrG,EAKM,MALNmD,GAKM,CAJQ9C,EAAAqE,CAAA,EAAc,8BAA1B3E,EAEC,OAFDqD,GACG,gBAAc,QAEjBxB,EAA6B8E,GAAA,CAAA,IAAA,EAAA,EAAA,WAGjCvG,EAKMkG,EAAA,CALD,MAAM,IAAI,SAAS,WAAA,aACtB,IAGM,CAHNrG,EAGM,MAHNqD,GAGM,CAFQhD,EAAAqE,CAAA,EAAc,8BAA1B3E,EAAgF,OAAhF4G,GAAiE,UAAQ,QACzE/E,EAAkCgF,GAAA,CAAA,IAAA,EAAA,EAAA,WAGtCzG,EAKMkG,EAAA,CALD,MAAM,IAAI,SAAS,WAAA,aACtB,IAGM,CAHNrG,EAGM,MAHN6G,GAGM,CAFQxG,EAAAqE,CAAA,EAAc,8BAA1B3E,EAAkF,OAAlF+G,GAAiE,YAAU,QAC3ElF,EAA2BmF,GAAA,CAAA,IAAA,EAAA,EAAA,mBAIjC5G,EA2BY6G,GAAA,KAAA,WA1BV,IAMW,CANX7G,EAMW8G,EAAA,CAND,MAAM,KAAG,WACjB,IAIE,CAJF9G,EAIE+G,GAAA,CAHC,SAAU7G,EAAAX,CAAA,EAAS,UAAU,UAC7B,gBAAeW,EAAAX,CAAA,EAAS,UAAU,YAClC,OAAQW,EAAAX,CAAA,EAAS,UAAU,UAAA,wDAGhCS,EAEW8G,EAAA,CAFD,MAAM,KAAG,WACjB,IAAa,CAAb9G,EAAagH,EAAA,CAAA,SAEfhH,EAEW8G,EAAA,CAFD,MAAM,IAAI,KAAA,EAAA,aAClB,IAAkB,CAAlB9G,EAAkBiH,EAAA,CAAA,SAEpBjH,EAEW8G,EAAA,CAFD,MAAM,IAAI,KAAA,EAAA,aAClB,IAAc,CAAd9G,EAAckH,EAAA,CAAA,SAEhBlH,EAEW8G,EAAA,CAFD,MAAM,IAAI,KAAA,EAAA,aAClB,IAAmB,CAAnB9G,EAAmBmH,EAAA,CAAA,SAGrBnH,EAEW8G,EAAA,CAFD,MAAM,IAAI,KAAA,EAAA,aAClB,IAAgB,CAAhB9G,EAAgBoH,EAAA,CAAA,SAElBpH,EAEW8G,EAAA,CAFD,MAAM,IAAI,KAAA,EAAA,aAClB,IAAgB,CAAhB9G,EAAgBqH,EAAA,CAAA,8EAOlBnH,EAAAgF,CAAA,EAAqB,GAAC,OAD9BzD,EAmBWmE,EAnBXC,EAmBW,CAAA,IAAA,CAAA,EAjBDF,EAAa,CACpB,EAAGzF,EAAAgF,CAAA,EAAqB,EACxB,EAAGhF,EAAAgF,CAAA,EAAqB,EACxB,EAAGhF,EAAAgF,CAAA,EAAqB,EACxB,EAAGhF,EAAAgF,CAAA,EAAqB,EACxB,EAAGhF,EAAAgF,CAAA,EAAqB,EACzB,kBAAgB,cAAA,cAEhB,IAQqB,CARrBlF,EAQqB8F,EAAA,CARD,OAAO,eAAa,WACtC,IAME,CANF9F,EAMEsH,EAAA,CALA,MAAM,cACL,OAAQpH,EAAAX,CAAA,EAAS,UAAU,WAC5B,MAAM,cACL,gBAAe,GAChB,aAAW,2BAAA,0EAKTW,EAAAiF,CAAA,EAAuB,GAAC,OADhC1D,EAmBWmE,EAnBXC,EAmBW,CAAA,IAAA,CAAA,EAjBDF,EAAa,CACpB,EAAGzF,EAAAiF,CAAA,EAAuB,EAC1B,EAAGjF,EAAAiF,CAAA,EAAuB,EAC1B,EAAGjF,EAAAiF,CAAA,EAAuB,EAC1B,EAAGjF,EAAAiF,CAAA,EAAuB,EAC1B,EAAGjF,EAAAiF,CAAA,EAAuB,EAC3B,kBAAgB,cAAA,cAEhB,IAQqB,CARrBnF,EAQqB8F,EAAA,CARD,OAAO,iBAAe,WACxC,IAME,CANF9F,EAMEsH,EAAA,CALA,MAAM,gBACL,OAAQpH,EAAAX,CAAA,EAAS,UAAU,aAC5B,MAAM,gBACL,cAAa,GACd,aAAW,0BAAA,0EAKEW,EAAAX,CAAA,EAAS,UAAU,eAA2BW,EAAAX,CAAA,EAAS,UAAU,aAAyBW,EAAAkF,CAAA,EAAsB,GAAC,OADpI3D,EAqBWmE,EArBXC,EAqBW,CAAA,IAAA,CAAA,EAfDF,EAAa,CACpB,EAAGzF,EAAAkF,CAAA,EAAsB,EACzB,EAAGlF,EAAAkF,CAAA,EAAsB,EACzB,EAAGlF,EAAAkF,CAAA,EAAsB,EACzB,EAAGlF,EAAAkF,CAAA,EAAsB,EACzB,EAAGlF,EAAAkF,CAAA,EAAsB,EACzB,QAAO,EACR,kBAAgB,cAAA,cAEhB,IAKqB,CALrBpF,EAKqB8F,EAAA,CALD,OAAO,gBAAc,WACvC,IAGE,CAHF9F,EAGEuH,GAAA,CAFC,MAAOrH,EAAAX,CAAA,EAAS,UAAU,YAC1B,iBAAgBW,EAAAX,CAAA,EAAS,UAAU,aAAA,0FAKlCW,EAAAkF,CAAA,EAAsB,GAAC,OAD/B3D,EAqBWmE,EArBXC,EAqBW,CAAA,IAAA,CAAA,EAnBDF,EAAa,CACpB,EAAGzF,EAAAmF,CAAA,EAAoB,EACvB,EAAGnF,EAAAmF,CAAA,EAAoB,EACvB,EAAGnF,EAAAmF,CAAA,EAAoB,EACvB,EAAGnF,EAAAmF,CAAA,EAAoB,EACvB,EAAGnF,EAAAmF,CAAA,EAAoB,EACvB,QAAO,EACR,kBAAgB,cAAA,cAEhB,IASqB,CATrBrF,EASqB8F,EAAA,CATD,OAAO,SAAO,WAChC,IAOuB,CAPvB9F,EAOuBwH,GAAA,CANpB,kBAAiBtH,EAAAX,CAAA,EAAS,UAAU,UACpC,gBAAe,GACf,UAAWW,EAAAX,CAAA,EAAS,UAAU,UAC9B,OAAQW,EAAAX,CAAA,EAAS,UAAU,UAC3B,cAAcgG,CAAA"}