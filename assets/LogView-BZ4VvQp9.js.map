{"version":3,"file":"LogView-BZ4VvQp9.js","sources":["../../src/components/ftbot/LogViewer.vue","../../src/views/LogView.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nconst botStore = useBotStore();\nconst scrollContainer = ref<HTMLElement | null>(null);\n\nonMounted(async () => {\n  refreshLogs();\n});\n\nasync function refreshLogs() {\n  await botStore.activeBot.getLogs();\n  scrollToBottom();\n}\n\nfunction getLogColor(logLevel: string) {\n  switch (logLevel) {\n    case 'WARNING':\n      return 'text-yellow-500';\n    case 'ERROR':\n      return 'text-red-500';\n    default:\n      return 'text-surface-500';\n  }\n}\n\nfunction scrollToBottom() {\n  if (scrollContainer.value) {\n    scrollContainer.value.scrollTop = scrollContainer.value.scrollHeight;\n  }\n}\n</script>\n\n<template>\n  <div class=\"flex h-full p-0 align-items-start\">\n    <div\n      ref=\"scrollContainer\"\n      class=\"border border-surface-500 p-1 text-start text-sm pb-5 w-full h-full overflow-auto\"\n    >\n      <pre\n        v-for=\"(log, index) in botStore.activeBot.lastLogs\"\n        :key=\"index\"\n        class=\"m-0 overflow-visible\"\n        style=\"line-height: unset\"\n      ><span class=\"text-surface-600 dark:text-surface-400\">{{ log[0] }} <span :class=\"getLogColor(log[3])\">{{ log[3].padEnd(7, ' ') }}</span> {{ log[2] }} - </span\n      ><span class=\"dark:text-surface-200\">{{ log[4] }}</span\n        ></pre>\n    </div>\n    <div class=\"flex flex-col gap-1 ms-1\">\n      <Button\n        id=\"refresh-logs\"\n        severity=\"secondary\"\n        size=\"small\"\n        title=\"Reload Logs\"\n        @click=\"refreshLogs\"\n      >\n        <template #icon>\n          <i-mdi-refresh />\n        </template>\n      </Button>\n      <Button size=\"small\" title=\"Scroll to bottom\" severity=\"secondary\" @click=\"scrollToBottom\">\n        <template #icon>\n          <i-mdi-arrow-down-thick />\n        </template>\n      </Button>\n    </div>\n  </div>\n</template>\n\n<style lang=\"css\" scoped>\ntextarea {\n  width: 100%;\n  min-height: 6em;\n  resize: none;\n}\n</style>\n","<script setup lang=\"ts\"></script>\n\n<template>\n  <div class=\"p-1 md:p-4 md:pe-2 h-full\">\n    <LogViewer />\n  </div>\n</template>\n"],"names":["botStore","useBotStore","scrollContainer","ref","onMounted","refreshLogs","scrollToBottom","getLogColor","logLevel","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","_unref","log","index","_hoisted_2","_createTextVNode","_toDisplayString","_normalizeClass","_hoisted_3","_hoisted_4","_createVNode","_component_Button","_component_i_mdi_refresh","_component_i_mdi_arrow_down_thick","_component_LogViewer"],"mappings":"unBAGA,MAAMA,EAAWC,EAAA,EACXC,EAAkBC,EAAwB,IAAI,EAEpDC,EAAU,SAAY,CACpBC,EAAA,CACF,CAAC,EAED,eAAeA,GAAc,CAC3B,MAAML,EAAS,UAAU,QAAA,EACzBM,EAAA,CACF,CAEA,SAASC,EAAYC,EAAkB,CACrC,OAAQA,EAAA,CACN,IAAK,UACH,MAAO,kBACT,IAAK,QACH,MAAO,eACT,QACE,MAAO,kBAAA,CAEb,CAEA,SAASF,GAAiB,CACpBJ,EAAgB,QAClBA,EAAgB,MAAM,UAAYA,EAAgB,MAAM,aAE5D,iCAIE,OAAAO,EAAA,EAAAC,EAgCM,MAhCNC,EAgCM,CA/BJC,EAYM,MAAA,SAXA,kBAAJ,IAAIV,EACJ,MAAM,mFAAA,UAENQ,EAOSG,EAAA,KAAAC,EANgBC,KAAS,UAAU,SAAQ,CAA1CC,EAAKC,SADfP,EAOS,MAAA,CALN,IAAKO,EACN,MAAM,uBACN,MAAA,CAAA,cAAA,OAAA,CAAA,GACDL,EACA,OADAM,EACA,CADwDC,EAAAC,EAAAJ,MAAS,IAAC,CAAA,EAAAJ,EAAqE,OAAA,CAA9D,MAAKS,EAAEd,EAAYS,EAAG,CAAA,CAAA,CAAA,CAAA,EAASI,EAAAJ,KAAO,OAAM,EAAA,GAAA,CAAA,EAAA,CAAA,IAAkB,IAACI,EAAGJ,EAAG,CAAA,CAAA,EAAM,MAAG,CAAA,CAAA,GACvJJ,EACE,OADFU,EACEF,EADqCJ,EAAG,CAAA,CAAA,EAAA,CAAA,CAAA,iBAG7CJ,EAiBM,MAjBNW,EAiBM,CAhBJC,EAUSC,EAAA,CATP,GAAG,eACH,SAAS,YACT,KAAK,QACL,MAAM,cACL,QAAOpB,CAAA,GAEG,OACT,IAAiB,CAAjBmB,EAAiBE,CAAA,CAAA,SAGrBF,EAISC,EAAA,CAJD,KAAK,QAAQ,MAAM,mBAAmB,SAAS,YAAa,QAAOnB,CAAA,GAC9D,OACT,IAA0B,CAA1BkB,EAA0BG,CAAA,CAAA,+DC3D7BhB,EAAA,CAAA,MAAM,2BAA2B,4BAAtC,OAAAF,EAAA,EAAAC,EAEM,MAFNC,EAEM,CADJa,EAAaI,CAAA"}