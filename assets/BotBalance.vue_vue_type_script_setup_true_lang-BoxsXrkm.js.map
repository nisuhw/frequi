{"version":3,"file":"BotBalance.vue_vue_type_script_setup_true_lang-BoxsXrkm.js","sources":["../../node_modules/.pnpm/primevue@4.3.6_vue@3.5.17_typescript@5.8.3_/node_modules/primevue/columngroup/style/index.mjs","../../node_modules/.pnpm/primevue@4.3.6_vue@3.5.17_typescript@5.8.3_/node_modules/primevue/columngroup/index.mjs","../../node_modules/.pnpm/primevue@4.3.6_vue@3.5.17_typescript@5.8.3_/node_modules/primevue/row/index.mjs","../../src/components/charts/BalanceChart.vue","../../src/components/ftbot/BotBalance.vue"],"sourcesContent":["import BaseStyle from '@primevue/core/base/style';\n\nvar ColumnGroupStyle = BaseStyle.extend({\n  name: 'columngroup'\n});\n\nexport { ColumnGroupStyle as default };\n//# sourceMappingURL=index.mjs.map\n","import BaseComponent from '@primevue/core/basecomponent';\nimport ColumnGroupStyle from 'primevue/columngroup/style';\n\nvar script$1 = {\n  name: 'BaseColumnGroup',\n  \"extends\": BaseComponent,\n  props: {\n    type: {\n      type: String,\n      \"default\": null\n    }\n  },\n  style: ColumnGroupStyle,\n  provide: function provide() {\n    return {\n      $pcColumnGroup: this,\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'ColumnGroup',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  inject: ['$columnGroups'],\n  mounted: function mounted() {\n    var _this$$columnGroups;\n    (_this$$columnGroups = this.$columnGroups) === null || _this$$columnGroups === void 0 || _this$$columnGroups.add(this.$);\n  },\n  unmounted: function unmounted() {\n    var _this$$columnGroups2;\n    (_this$$columnGroups2 = this.$columnGroups) === null || _this$$columnGroups2 === void 0 || _this$$columnGroups2[\"delete\"](this.$);\n  },\n  render: function render() {\n    return null;\n  }\n};\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n","import BaseComponent from '@primevue/core/basecomponent';\n\nvar script = {\n  name: 'Row',\n  \"extends\": BaseComponent,\n  inject: ['$rows'],\n  mounted: function mounted() {\n    var _this$$rows;\n    (_this$$rows = this.$rows) === null || _this$$rows === void 0 || _this$$rows.add(this.$);\n  },\n  unmounted: function unmounted() {\n    var _this$$rows2;\n    (_this$$rows2 = this.$rows) === null || _this$$rows2 === void 0 || _this$$rows2[\"delete\"](this.$);\n  },\n  render: function render() {\n    return null;\n  }\n};\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n","<script setup lang=\"ts\">\nimport type { EChartsOption } from 'echarts';\nimport ECharts from 'vue-echarts';\n\nimport { PieChart } from 'echarts/charts';\nimport {\n  DatasetComponent,\n  LegendComponent,\n  TitleComponent,\n  TooltipComponent,\n} from 'echarts/components';\nimport { use } from 'echarts/core';\nimport { LabelLayout } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\n\nimport { useSettingsStore } from '@/stores/settings';\nimport type { BalanceValues } from '@/types';\nimport { useElementSize } from '@vueuse/core';\n\nuse([\n  PieChart,\n  CanvasRenderer,\n  DatasetComponent,\n  LegendComponent,\n  TitleComponent,\n  TooltipComponent,\n  LabelLayout,\n]);\n\nconst balanceChart = ref(null);\nconst { width } = useElementSize(balanceChart);\n\nconst props = defineProps({\n  currencies: { required: true, type: Array as () => BalanceValues[] },\n  showTitle: { required: false, type: Boolean },\n});\nconst settingsStore = useSettingsStore();\n\nconst balanceChartOptions = computed((): EChartsOption => {\n  return {\n    title: {\n      text: 'Balance',\n      show: props.showTitle,\n    },\n    center: ['50%', '50%'],\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    dataset: {\n      dimensions: ['balance', 'currency', 'est_stake', 'free', 'used', 'stake'],\n      source: props.currencies,\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: (params) => {\n        return `${formatPriceCurrency(params.value.balance, params.value.currency, 8)}<br />${\n          params.percent\n        }% (${formatPriceCurrency(params.value.est_stake, params.value.stake)})`;\n      },\n    },\n    // legend: {\n    //   orient: 'vertical',\n    //   right: 10,\n    //   top: 20,\n    //   bottom: 20,\n    // },\n    series: [\n      {\n        type: 'pie',\n        radius: ['40%', '70%'],\n\n        encode: {\n          value: 'est_stake',\n          itemName: 'currency',\n          tooltip: ['balance', 'currency'],\n        },\n        label: {\n          formatter: '{b} - {d}%',\n        },\n        tooltip: {\n          show: true,\n        },\n      },\n    ],\n  };\n});\n</script>\n\n<template>\n  <ECharts\n    v-if=\"currencies\"\n    ref=\"balanceChart\"\n    :option=\"balanceChartOptions\"\n    :theme=\"settingsStore.chartTheme\"\n    :style=\"{ height: width * 0.6 + 'px' }\"\n    autoresize\n  />\n</template>\n\n<style lang=\"css\" scoped>\n.echarts {\n  min-height: 20px;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport type { BalanceValues } from '@/types';\n\nconst botStore = useBotStore();\nconst hideSmallBalances = ref(true);\nconst showBotOnly = ref(true);\n\nconst smallBalance = computed<number>(() => {\n  return Number((1.1 ** botStore.activeBot.stakeCurrencyDecimals).toFixed(8));\n});\n\nconst canUseBotBalance = computed(() => {\n  return botStore.activeBot.botFeatures.hasBotBalance;\n});\n\nconst balanceCurrencies = computed(() => {\n  return botStore.activeBot.balance.currencies?.filter(\n    (v) =>\n      (!hideSmallBalances.value || v.est_stake >= smallBalance.value) &&\n      (!canUseBotBalance.value || !showBotOnly.value || (v.is_bot_managed ?? true) === true),\n  );\n});\n\nconst formatCurrency = (value) => {\n  return value ? formatPrice(value, botStore.activeBot.stakeCurrencyDecimals) : '';\n};\n\nconst chartValues = computed<BalanceValues[]>(() => {\n  return balanceCurrencies.value?.map((v) => {\n    return {\n      balance:\n        showBotOnly.value && canUseBotBalance.value && v.bot_owned != undefined\n          ? v.bot_owned\n          : v.is_position === true\n            ? v.position\n            : v.balance,\n      currency: v.currency,\n      est_stake:\n        showBotOnly.value && canUseBotBalance.value\n          ? (v.est_stake_bot ?? v.est_stake)\n          : v.est_stake,\n      free: showBotOnly.value && canUseBotBalance.value ? (v.bot_owned ?? v.free) : v.free,\n      used: v.used,\n      stake: v.stake,\n    };\n  });\n});\n\nconst tableFields = computed(() => {\n  return [\n    { field: 'currency', header: 'Currency' },\n    {\n      field: showBotOnly.value && canUseBotBalance.value ? 'bot_owned' : 'free',\n      header: 'Available',\n      asCurrency: true,\n    },\n    {\n      field: showBotOnly.value && canUseBotBalance.value ? 'est_stake_bot' : 'est_stake',\n      header: `in ${botStore.activeBot.balance.stake}`,\n      asCurrency: true,\n    },\n  ];\n});\n\nasync function refreshBalance() {\n  botStore.activeBot.getBalance();\n}\n\nonMounted(() => {\n  refreshBalance();\n});\n</script>\n\n<template>\n  <div>\n    <div class=\"flex flex-wrap flex-row mb-2 justify-end items-center\">\n      <label class=\"text-xl ms-1 me-auto mb-0\">{{ showBotOnly ? 'Bot' : 'Account' }} Balance</label>\n      <div class=\"flex flex-row gap-1\">\n        <Button\n          v-if=\"canUseBotBalance\"\n          severity=\"secondary\"\n          :tooltip=\"!showBotOnly ? 'Showing Account balance' : 'Showing Bot balance'\"\n          @click=\"showBotOnly = !showBotOnly\"\n        >\n          <template #icon>\n            <i-mdi-robot v-if=\"showBotOnly\" />\n            <i-mdi-bank v-else />\n          </template>\n        </Button>\n        <Button\n          severity=\"secondary\"\n          :tooltip=\"!hideSmallBalances ? 'Hide small balances' : 'Show all balances'\"\n          @click=\"hideSmallBalances = !hideSmallBalances\"\n        >\n          <template #icon>\n            <i-mdi-eye-off v-if=\"hideSmallBalances\" />\n            <i-mdi-eye v-else />\n          </template>\n        </Button>\n        <Button severity=\"secondary\" @click=\"refreshBalance\">\n          <template #icon>\n            <i-mdi-refresh />\n          </template>\n        </Button>\n      </div>\n    </div>\n    <BalanceChart v-if=\"balanceCurrencies\" :currencies=\"chartValues\" />\n    <div>\n      <p v-if=\"botStore.activeBot.balance.note\">\n        <strong>{{ botStore.activeBot.balance.note }}</strong>\n      </p>\n      <DataTable :value=\"balanceCurrencies\" footer>\n        <Column\n          v-for=\"field in tableFields\"\n          :key=\"field.field\"\n          :field=\"field.field\"\n          :header=\"field.header\"\n          ><template v-if=\"field.asCurrency\" #body=\"{ data }\">\n            {{ formatCurrency(data[field.field]) }}\n          </template></Column\n        >\n        <ColumnGroup type=\"footer\">\n          <Row>\n            <Column footer=\"Total\" f />\n            <Column>\n              <template #footer>\n                <span\n                  class=\"font-italic\"\n                  :title=\"`Increase over initial capital of ${formatCurrency(\n                    botStore.activeBot.balance.starting_capital,\n                  )} ${botStore.activeBot.balance.stake}`\"\n                >\n                  {{ formatPercent(botStore.activeBot.balance.starting_capital_ratio) }}\n                </span>\n              </template>\n            </Column>\n            <Column>\n              <template #footer>\n                <strong>\n                  {{\n                    showBotOnly && canUseBotBalance\n                      ? formatCurrency(botStore.activeBot.balance.total_bot)\n                      : formatCurrency(botStore.activeBot.balance.total)\n                  }}\n                </strong>\n              </template>\n            </Column>\n          </Row>\n        </ColumnGroup>\n      </DataTable>\n    </div>\n  </div>\n</template>\n"],"names":["ColumnGroupStyle","BaseStyle","script$1","BaseComponent","script","_this$$columnGroups","_this$$columnGroups2","_this$$rows","_this$$rows2","use","PieChart","CanvasRenderer","DatasetComponent","LegendComponent","TitleComponent","TooltipComponent","LabelLayout","balanceChart","ref","width","useElementSize","props","__props","settingsStore","useSettingsStore","balanceChartOptions","computed","params","formatPriceCurrency","_createBlock","_unref","ECharts","botStore","useBotStore","hideSmallBalances","showBotOnly","smallBalance","canUseBotBalance","balanceCurrencies","v","formatCurrency","value","formatPrice","chartValues","tableFields","refreshBalance","onMounted","_createElementBlock","_createElementVNode","_hoisted_1","_hoisted_2","_toDisplayString","_hoisted_3","_component_Button","_cache","$event","_component_i_mdi_robot","_component_i_mdi_bank","_createVNode","_component_i_mdi_eye_off","_component_i_mdi_eye","_component_i_mdi_refresh","_component_BalanceChart","_hoisted_4","_component_DataTable","_Fragment","_renderList","field","_component_Column","_withCtx","data","_createTextVNode","_component_ColumnGroup","_component_Row","formatPercent","_hoisted_5"],"mappings":"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","x_google_ignoreList":[0,1,2]}