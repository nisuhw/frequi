{"version":3,"file":"BacktestingView-BPiU1GE8.js","sources":["../../node_modules/.pnpm/@primeuix+styles@1.2.1/node_modules/@primeuix/styles/dist/radiobuttongroup/index.mjs","../../node_modules/.pnpm/primevue@4.3.6_vue@3.5.17_typescript@5.8.3_/node_modules/primevue/radiobuttongroup/style/index.mjs","../../node_modules/.pnpm/primevue@4.3.6_vue@3.5.17_typescript@5.8.3_/node_modules/primevue/radiobuttongroup/index.mjs","../../src/components/ftbot/TradeListNav.vue","../../src/components/ftbot/BacktestResultChart.vue","../../src/components/charts/MarketChangeChart.vue","../../src/components/charts/TradeDurationChart.vue","../../src/components/ftbot/BacktestGraphs.vue","../../src/components/ftbot/BacktestResultSelectEntry.vue","../../src/utils/objectToTableItems.ts","../../src/components/ftbot/BacktestResultComparison.vue","../../src/components/ftbot/BacktestResultPeriodBreakdown.vue","../../src/components/ftbot/BacktestResultTablePer.vue","../../src/components/ftbot/BacktestResultAnalysis.vue","../../src/components/ftbot/FreqaiModelSelect.vue","../../src/stores/btStore.ts","../../src/components/ftbot/BacktestRun.vue","../../src/components/ftbot/BacktestHistoryLoad.vue","../../src/components/ftbot/BacktestResultSelect.vue","../../src/views/BacktestingView.vue"],"sourcesContent":["var style=\"\\n    .p-radiobutton-group {\\n        display: inline-flex;\\n    }\\n\";export{style};//# sourceMappingURL=index.mjs.map","import { style } from '@primeuix/styles/radiobuttongroup';\nimport BaseStyle from '@primevue/core/base/style';\n\nvar classes = {\n  root: 'p-radiobutton-group p-component'\n};\nvar RadioButtonGroupStyle = BaseStyle.extend({\n  name: 'radiobuttongroup',\n  style: style,\n  classes: classes\n});\n\nexport { RadioButtonGroupStyle as default };\n//# sourceMappingURL=index.mjs.map\n","import { uuid } from '@primeuix/utils';\nimport BaseEditableHolder from '@primevue/core/baseeditableholder';\nimport RadioButtonGroupStyle from 'primevue/radiobuttongroup/style';\nimport { createElementBlock, openBlock, mergeProps, renderSlot } from 'vue';\n\nvar script$1 = {\n  name: 'BaseRadioButtonGroup',\n  \"extends\": BaseEditableHolder,\n  style: RadioButtonGroupStyle,\n  provide: function provide() {\n    return {\n      $pcRadioButtonGroup: this,\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'RadioButtonGroup',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  data: function data() {\n    return {\n      groupName: this.name\n    };\n  },\n  watch: {\n    name: function name(newValue) {\n      this.groupName = newValue || uuid('radiobutton-group-');\n    }\n  },\n  mounted: function mounted() {\n    this.groupName = this.groupName || uuid('radiobutton-group-');\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [renderSlot(_ctx.$slots, \"default\")], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n","<script setup lang=\"ts\">\nimport type { Trade } from '@/types';\n\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nconst props = defineProps({\n  trades: { required: true, type: Array as () => Trade[] },\n  backtestMode: { required: false, default: false, type: Boolean },\n});\nconst emit = defineEmits<{ 'trade-select': [trade: Trade] }>();\n\nconst botStore = useBotStore();\nconst selectedTrade = ref({} as Trade);\nconst sortDescendingOrder = ref(true);\nconst sortMethod = ref('openDate');\nconst sortMethodOptions = [\n  { text: 'Open date', value: 'openDate' },\n  { text: 'Profit %', value: 'profit' },\n];\n\nconst onTradeSelect = (trade: Trade) => {\n  selectedTrade.value = trade;\n  emit('trade-select', trade);\n};\n\nconst sortedTrades = computed(() => {\n  const field: keyof Trade = sortMethod.value === 'profit' ? 'profit_ratio' : 'open_timestamp';\n  return sortDescendingOrder.value\n    ? props.trades.slice().sort((a, b) => b[field] - a[field])\n    : props.trades.slice().sort((a, b) => a[field] - b[field]);\n});\n\nconst ordersVisible = ref(sortedTrades.value.map(() => false));\n\nwatch(\n  () => botStore.activeBot.selectedPair,\n  () => {\n    ordersVisible.value = sortedTrades.value.map(() => false);\n  },\n);\n</script>\n\n<template>\n  <div>\n    <div class=\"flex justify-center\">\n      <span class=\"me-2\">Sort by:</span>\n      <RadioButtonGroup v-model=\"sortMethod\" :options=\"sortMethodOptions\" name=\"radio-options\">\n        <div v-for=\"opt in sortMethodOptions\" :key=\"opt.value\" class=\"flex items-center\">\n          <RadioButton :id=\"`id-${opt.value}`\" :value=\"opt.value\" />\n          <label :for=\"`id-${opt.value}`\">{{ opt.text }}</label>\n        </div>\n      </RadioButtonGroup>\n    </div>\n    <ul\n      class=\"divide-y divide-surface-300 dark:divide-surface-700 divide-solid border-x border-y rounded-sm border-surface-300 dark:border-surface-700\"\n    >\n      <Button\n        severity=\"secondary\"\n        variant=\"text\"\n        class=\"w-full flex flex-wrap justify-center items-center\"\n        :title=\"'Trade Navigation'\"\n        @click=\"sortDescendingOrder = !sortDescendingOrder\"\n        >Trade Navigation {{ sortDescendingOrder ? '&#8595;' : '&#8593;' }}\n      </Button>\n      <li\n        v-for=\"(trade, i) in sortedTrades\"\n        :key=\"trade.open_timestamp\"\n        class=\"flex flex-col py-1 px-1 items-stretch\"\n        :title=\"`${trade.pair}`\"\n        :class=\"{\n          'bg-primary-100 dark:bg-primary-800 text-primary-contrast':\n            trade.open_timestamp === selectedTrade.open_timestamp,\n        }\"\n        @click=\"onTradeSelect(trade)\"\n      >\n        <div class=\"flex\">\n          <div class=\"flex flex-col\">\n            <div>\n              <span v-if=\"botStore.activeBot.botState.trading_mode !== 'spot'\">{{\n                trade.is_short ? 'S-' : 'L-'\n              }}</span>\n              <DateTimeTZ :date=\"trade.open_timestamp\" />\n            </div>\n            <TradeProfit :trade=\"trade\" class=\"my-1\" />\n            <ProfitPill\n              v-if=\"backtestMode\"\n              :profit-ratio=\"trade.profit_ratio\"\n              :stake-currency=\"botStore.activeBot.stakeCurrency\"\n            />\n          </div>\n          <Button\n            size=\"small\"\n            class=\"ms-auto mt-auto\"\n            variant=\"outlined\"\n            severity=\"secondary\"\n            @click=\"ordersVisible[i] = !ordersVisible[i]\"\n            ><i-mdi-chevron-right v-if=\"!ordersVisible[i]\" width=\"24\" height=\"24\" />\n            <i-mdi-chevron-down v-if=\"ordersVisible[i]\" width=\"24\" height=\"24\" />\n          </Button>\n        </div>\n        <Transition>\n          <div v-if=\"ordersVisible[i]\">\n            <ul class=\"px-3 m-0 list-disc list-inside\">\n              <li\n                v-for=\"order in trade.orders?.filter((o) => o.order_filled_timestamp !== null)\"\n                :key=\"order.order_timestamp\"\n              >\n                {{ order.ft_order_side }} {{ order.amount }} at {{ order.safe_price }}\n              </li>\n            </ul>\n          </div>\n        </Transition>\n      </li>\n      <div v-if=\"trades.length === 0\">No trades to show...</div>\n    </ul>\n  </div>\n</template>\n\n<style scoped>\n.list-group {\n  text-align: left;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nimport type { ChartSliderPosition, StrategyBacktestResult, Trade } from '@/types';\n\nconst props = defineProps<{\n  timeframe: string;\n  strategy: string;\n  freqaiModel?: string;\n  timerange: string;\n  backtestResult: StrategyBacktestResult;\n}>();\nconst botStore = useBotStore();\nconst isBarVisible = ref({ right: true, left: true });\nconst sliderPosition = ref<ChartSliderPosition>();\n\nconst navigateChartToTrade = (trade: Trade) => {\n  sliderPosition.value = {\n    startValue: trade.open_timestamp,\n    endValue: trade.close_timestamp,\n  };\n};\n\nfunction refreshOHLCV(pair: string, columns: string[]) {\n  botStore.activeBot.getPairHistory({\n    pair: pair,\n    timeframe: props.timeframe,\n    timerange: props.timerange,\n    strategy: props.strategy,\n    freqaimodel: props.freqaiModel,\n    columns: columns,\n    margin_mode: props.backtestResult.margin_mode,\n    trading_mode: props.backtestResult.trading_mode,\n  });\n}\nonMounted(() => {\n  if (!botStore.activeBot.selectedPair && props.backtestResult.pairlist.length > 0) {\n    [botStore.activeBot.selectedPair] = props.backtestResult.pairlist;\n  }\n});\n</script>\n\n<template>\n  <div>\n    <div class=\"flex flex-row mb-1 items-center\">\n      <div class=\"me-2\">\n        <Button\n          aria-label=\"Close\"\n          title=\"Pair Navigation\"\n          severity=\"secondary\"\n          variant=\"outlined\"\n          size=\"small\"\n          @click=\"isBarVisible.left = !isBarVisible.left\"\n        >\n          <i-mdi-chevron-right v-if=\"!isBarVisible.left\" width=\"24\" height=\"24\" />\n          <i-mdi-chevron-left v-if=\"isBarVisible.left\" width=\"24\" height=\"24\" />\n        </Button>\n      </div>\n      <span class=\"grow\">\n        Graph will always show the latest values for the selected strategy. <br />\n        Timerange: {{ timerange }} - {{ strategy }}\n      </span>\n      <div class=\"text-end\">\n        <Button\n          aria-label=\"Close\"\n          variant=\"outlined\"\n          title=\"Trade Navigation\"\n          size=\"small\"\n          severity=\"secondary\"\n          @click=\"isBarVisible.right = !isBarVisible.right\"\n        >\n          <i-mdi-chevron-right v-if=\"isBarVisible.right\" width=\"24\" height=\"24\" />\n          <i-mdi-chevron-left v-if=\"!isBarVisible.right\" width=\"24\" height=\"24\" />\n        </Button>\n      </div>\n    </div>\n    <div class=\"text-center flex flex-row h-full items-stretch\">\n      <Transition name=\"fadeleft\">\n        <PairSummary\n          v-if=\"isBarVisible.left\"\n          class=\"overflow-y-auto overflow-x-hidden\"\n          style=\"max-height: calc(100vh - 200px)\"\n          :pairlist=\"backtestResult.pairlist\"\n          :trades=\"backtestResult.trades\"\n          :starting-balance=\"backtestResult.starting_balance\"\n          sort-method=\"profit\"\n          :backtest-mode=\"true\"\n        />\n      </Transition>\n      <CandleChartContainer\n        :available-pairs=\"backtestResult.pairlist\"\n        historic-view\n        reload-data-on-switch\n        :timeframe=\"timeframe\"\n        :timerange=\"timerange\"\n        :strategy=\"strategy\"\n        :trades=\"backtestResult.trades\"\n        class=\"flex-shrink-1 candle-chart-container w-full px-0 h-full align-self-stretch\"\n        :slider-position=\"sliderPosition\"\n        :freqai-model=\"freqaiModel\"\n        @refresh-data=\"refreshOHLCV\"\n      >\n      </CandleChartContainer>\n      <Transition name=\"fade\">\n        <TradeListNav\n          v-if=\"isBarVisible.right\"\n          class=\"overflow-y-auto overflow-x-visible min-w-56\"\n          style=\"max-height: calc(100vh - 200px)\"\n          :trades=\"backtestResult.trades.filter((t) => t.pair === botStore.activeBot.selectedPair)\"\n          @trade-select=\"navigateChartToTrade\"\n        />\n      </Transition>\n    </div>\n    <DraggableContainer header=\"Single trades\" class=\"row mt-2 w-full\">\n      <TradeList\n        class=\"row trade-history mt-2 w-full\"\n        :trades=\"backtestResult.trades\"\n        :show-filter=\"true\"\n      />\n    </DraggableContainer>\n  </div>\n</template>\n\n<style lang=\"css\" scoped>\n.candle-chart-container {\n  /* TODO: Rough estimate - still to fix correctly\n   Applies to all \"calc\" usages in this file. */\n  height: calc(100vh - 250px) !important;\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: all 0.2s;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n  transform: translateX(30px);\n}\n.fadeleft-enter-active,\n.fadeleft-leave-active {\n  transition: all 0.2s;\n}\n\n.fadeleft-enter-from,\n.fadeleft-leave-to {\n  opacity: 0;\n  transform: translateX(-30px);\n}\n</style>\n","<script setup lang=\"ts\">\nimport ECharts from 'vue-echarts';\n// import { EChartsOption } from 'echarts';\n\nimport { use } from 'echarts/core';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { LineChart } from 'echarts/charts';\nimport {\n  DataZoomComponent,\n  DatasetComponent,\n  GridComponent,\n  LegendComponent,\n  CalendarComponent,\n  TitleComponent,\n  TooltipComponent,\n  VisualMapComponent,\n} from 'echarts/components';\n\nimport type { BacktestMarketChange } from '@/types';\nimport type { EChartsOption } from 'echarts';\n\nuse([\n  LineChart,\n  CalendarComponent,\n  CanvasRenderer,\n  GridComponent,\n  DatasetComponent,\n  DataZoomComponent,\n  LegendComponent,\n  TitleComponent,\n  TooltipComponent,\n  VisualMapComponent,\n]);\n\n// Define Column labels here to avoid typos\nconst CHART_MARKET_CHANGE = 'Market change %';\n\nconst props = withDefaults(\n  defineProps<{\n    marketChangeData: BacktestMarketChange | null;\n    showTitle?: boolean;\n  }>(),\n  {\n    showTitle: true,\n  },\n);\n\nconst settingsStore = useSettingsStore();\n\nconst marketChangeChart = ref(null);\n\nconst marketChangeOptions: ComputedRef<EChartsOption> = computed(() => {\n  if (!props.marketChangeData) {\n    return {};\n  }\n  const colDate = props.marketChangeData.columns.findIndex((el) => el === '__date_ts');\n  const colRelMean = props.marketChangeData.columns.findIndex((el) => el === 'rel_mean');\n  return {\n    title: {\n      text: 'Market change %',\n      left: 'center',\n      show: props.showTitle,\n    },\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    dataset: {\n      source: props.marketChangeData.data,\n    },\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'line',\n        label: {\n          backgroundColor: '#6a7985',\n        },\n      },\n    },\n    grid: {\n      ...echartsGridDefault,\n    },\n    legend: {\n      data: [CHART_MARKET_CHANGE],\n      right: '5%',\n      selectedMode: false,\n    },\n    xAxis: [\n      {\n        type: 'time',\n        axisLine: { onZero: false },\n        axisTick: { show: true },\n        axisLabel: { show: true },\n        axisPointer: {\n          label: { show: false },\n        },\n        // position: 'top',\n        splitLine: { show: false },\n        splitNumber: 20,\n        min: 'dataMin',\n        max: 'dataMax',\n      },\n    ],\n    yAxis: [\n      {\n        type: 'value',\n        name: CHART_MARKET_CHANGE,\n        splitLine: {\n          show: false,\n        },\n        nameRotate: 90,\n        nameLocation: 'middle',\n        nameGap: 35,\n      },\n    ],\n    dataZoom: [\n      {\n        type: 'inside',\n        start: 0,\n        end: 100,\n      },\n      {\n        bottom: 10,\n        start: 0,\n        end: 100,\n        ...dataZoomPartial,\n      },\n    ],\n    series: [\n      {\n        type: 'line',\n        name: CHART_MARKET_CHANGE,\n        showSymbol: false,\n        color: settingsStore.chartTheme === 'dark' ? '#c2c2c2' : 'black',\n        encode: {\n          x: colDate,\n          // open, close, low, high\n          y: colRelMean,\n        },\n      },\n    ],\n  };\n});\n</script>\n\n<template>\n  <ECharts\n    v-if=\"marketChangeData?.data\"\n    ref=\"marketChangeChart\"\n    :option=\"marketChangeOptions\"\n    :theme=\"settingsStore.chartTheme\"\n    autoresize\n  />\n</template>\n\n<style lang=\"css\" scoped>\n.echarts {\n  min-height: 240px;\n  height: 100%;\n}\n</style>\n","<script setup lang=\"ts\">\nimport ECharts from 'vue-echarts';\nimport type { ClosedTrade } from '@/types';\nimport type { EChartsOption } from 'echarts';\n\nimport { use } from 'echarts/core';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { BoxplotChart, ScatterChart } from 'echarts/charts';\nimport {\n  DatasetComponent,\n  DataZoomComponent,\n  GridComponent,\n  LegendComponent,\n  TitleComponent,\n  TooltipComponent,\n  TransformComponent,\n  VisualMapComponent,\n} from 'echarts/components';\n\nconst props = withDefaults(\n  defineProps<{\n    trades: ClosedTrade[];\n    showTitle?: boolean;\n  }>(),\n  {\n    showTitle: true,\n  },\n);\n\nconst settingsStore = useSettingsStore();\n\nuse([\n  DatasetComponent,\n  TitleComponent,\n  TooltipComponent,\n  GridComponent,\n  LegendComponent,\n  DataZoomComponent,\n  TransformComponent,\n  BoxplotChart,\n  CanvasRenderer,\n  VisualMapComponent,\n  ScatterChart,\n]);\n\nconst allTrades = computed(() => {\n  return props.trades.map((trade) => {\n    // Convert timestamp difference to minutes (timestamps are in milliseconds)\n    return (trade.close_timestamp - trade.open_timestamp) / (60 * 1000);\n  });\n});\n\nconst winningTrades = computed(() => {\n  return props.trades\n    .filter((trade) => trade.profit_ratio > 0)\n    .map((trade) => {\n      return (trade.close_timestamp - trade.open_timestamp) / (60 * 1000);\n    });\n});\n\nconst losingTrades = computed(() => {\n  return props.trades\n    .filter((trade) => trade.profit_ratio <= 0)\n    .map((trade) => {\n      return (trade.close_timestamp - trade.open_timestamp) / (60 * 1000);\n    });\n});\n\nconst chartOptions = computed((): EChartsOption => {\n  return {\n    title: {\n      text: 'Trades durations',\n      left: 'center',\n      show: props.showTitle,\n    },\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    dataset: [\n      {\n        id: 'allTrades',\n        source: [allTrades.value, winningTrades.value, losingTrades.value],\n      },\n      {\n        id: 'allTradesBoxplot',\n        fromDatasetId: 'allTrades',\n        transform: {\n          type: 'boxplot',\n\n          config: {\n            itemNameFormatter: (params) => {\n              if (params.value === 0) {\n                return 'All trades';\n              } else if (params.value === 1) {\n                return 'Winning trades';\n              } else if (params.value === 2) {\n                return 'Losing trades';\n              }\n            },\n          },\n        },\n      },\n      {\n        id: 'outlier',\n        fromDatasetIndex: 1,\n        fromTransformResult: 1,\n      },\n    ],\n    xAxis: {\n      type: 'category',\n      show: true,\n      // data: ['All Trades', 'Winning Trades', 'Losing Trades'],\n    },\n    yAxis: [\n      {\n        type: 'value',\n        name: 'Trade duration',\n        splitArea: {\n          show: true,\n        },\n        axisLabel: {\n          formatter: formatDuration,\n        },\n      },\n    ],\n    tooltip: {\n      formatter: (params: any) => {\n        if (params.seriesType === 'boxplot') {\n          const statistics = params.data;\n          return `\n            <div>${params.name}</div>\n            <div>Min: ${formatDuration(statistics[1])}</div>\n            <div>Q1: ${formatDuration(statistics[2])}</div>\n            <div>Median: ${formatDuration(statistics[3])}</div>\n            <div>Q3: ${formatDuration(statistics[4])}</div>\n            <div>Max: ${formatDuration(statistics[5])}</div>\n          `;\n        }\n        return '';\n      },\n    },\n    visualMap: [\n      {\n        type: 'piecewise',\n        show: false,\n        dimension: 0,\n        pieces: [\n          {\n            min: 0,\n            max: 0,\n            label: 'All Trades',\n            color: '#5470c6',\n          },\n          {\n            min: 1,\n            max: 1,\n            label: 'Winning Trades',\n            color: '#12bb7b',\n          },\n          {\n            min: 2,\n            max: 2,\n            label: 'Losing Trades',\n            color: '#ef5350',\n          },\n        ],\n      },\n    ],\n    series: [\n      {\n        name: 'Trade durations',\n        type: 'boxplot',\n        datasetId: 'allTradesBoxplot',\n        colorBy: 'data',\n        // itemStyle: {\n        //   color: '#b8c5f2',\n        // },\n      },\n      {\n        name: 'outlier',\n        type: 'scatter',\n        datasetId: 'outlier',\n      },\n    ],\n  };\n});\n\n// Helper function to format duration in human-readable format\nfunction formatDuration(minutes: number): string {\n  if (minutes >= 60) {\n    const hours = Math.floor(minutes / 60);\n    const mins = Math.floor(minutes % 60);\n    return `${hours}h ${mins}m`;\n  }\n  return `${Math.floor(minutes)}m`;\n}\n</script>\n\n<template>\n  <!-- {{ chartData }} -->\n  <ECharts\n    v-if=\"trades.length > 0\"\n    :option=\"chartOptions\"\n    autoresize\n    :theme=\"settingsStore.chartTheme\"\n  />\n</template>\n\n<style scoped>\n.echarts {\n  width: 100%;\n  height: 100%;\n  min-height: 150px;\n}\n</style>\n","<script setup lang=\"ts\">\nimport type { ClosedTrade } from '@/types';\nimport TradeDurationChart from '../charts/TradeDurationChart.vue';\n\ndefineProps({\n  trades: { required: true, type: Array as () => ClosedTrade[] },\n});\n\nconst botStore = useBotStore();\n\nconst { state: marketChangeData } = useAsyncState(\n  () => botStore.activeBot.getBacktestMarketChange(),\n  null,\n);\n</script>\n<template>\n  <div class=\"text-center flex-fill flex flex-col h-full gap-1\">\n    <TradesLogChart :trades=\"trades\" class=\"flex-grow-1 chart-equal-height\" />\n    <TradeDurationChart\n      class=\"flex-grow-1 chart-equal-height\"\n      :trades=\"trades\"\n      :show-title=\"true\"\n    />\n    <CumProfitChart :trades=\"trades\" class=\"flex-grow-1 chart-equal-height\" :show-title=\"true\" />\n    <MarketChangeChart\n      v-if=\"marketChangeData\"\n      :market-change-data=\"marketChangeData\"\n      class=\"flex-grow-1 chart-equal-height\"\n    />\n    <ProfitDistributionChart\n      class=\"flex-grow-1 chart-equal-height\"\n      :trades=\"trades\"\n      :show-title=\"true\"\n    />\n  </div>\n</template>\n<style scoped lang=\"css\">\n.chart-equal-height {\n  min-height: 300px !important;\n}\n</style>\n","<script setup lang=\"ts\">\nimport type { BacktestResultInMemory } from '@/types';\n\ndefineProps({\n  backtestResult: {\n    required: true,\n    type: Object as () => BacktestResultInMemory,\n  },\n  selectedBacktestResultKey: { required: false, default: '', type: String },\n  canUseModify: { required: false, default: false, type: Boolean },\n});\n</script>\n\n<template>\n  <div class=\"flex flex-col me-2 text-start\">\n    <div class=\"font-bold\">\n      {{ backtestResult.metadata.strategyName }} - {{ backtestResult.strategy.timeframe }}\n    </div>\n    <div class=\"text-sm\">\n      TradeCount: {{ backtestResult.strategy.total_trades }} - Profit:\n      {{ formatPercent(backtestResult.strategy.profit_total) }}\n    </div>\n    <div v-if=\"canUseModify\" class=\"text-sm\" style=\"white-space: pre-wrap\">\n      {{ backtestResult.metadata.notes }}\n    </div>\n  </div>\n</template>\n","interface childObjects {\n  [key: string]: string | boolean | number | undefined;\n}\ninterface MutatingObject {\n  [key: string]: childObjects[];\n}\n\n/**\n *\n * @param originalobj Object in the form {Name, [{metric: value}]]}\n * @param valueKey Key to use for result\n * @returns Object in the form [{valueKey: metric, Name: value}]\n */\nexport function formatObjectForTable(originalobj: MutatingObject, valueKey: string) {\n  const result = Object.entries(originalobj).reduce((acc: childObjects[], [key, value]) => {\n    value.forEach((item) => {\n      const [metric, val] = Object.entries(item)[0];\n      const existingItem = acc.find((i) => i[valueKey] === metric);\n      if (existingItem) {\n        existingItem[key] = val;\n      } else {\n        acc.push({\n          [valueKey]: metric,\n          [key]: val,\n        });\n      }\n    });\n    return acc;\n  }, []);\n  return result;\n}\n","<script setup lang=\"ts\">\nimport type { BacktestResultInMemory } from '@/types';\n\nconst props = defineProps({\n  backtestResults: { required: true, type: Object as () => Record<string, BacktestResultInMemory> },\n});\n\nconst backtestResultStats = computed(() => {\n  const values = {};\n  Object.entries(props.backtestResults).forEach(([key, result]) => {\n    const tmp = generateBacktestMetricRows(result.strategy);\n    values[key] = tmp;\n  });\n  console.log(values);\n  // return '';\n  return formatObjectForTable(values, 'metric');\n});\n\nconst backtestResultFields = computed(() => {\n  const res = [{ key: 'metric', label: 'Metric' }];\n  Object.entries(props.backtestResults).forEach(([key, value]) => {\n    res.push({ key, label: value.metadata.strategyName });\n  });\n  return res;\n});\n</script>\n\n<template>\n  <div class=\"px-0 mw-full\">\n    <div class=\"flex justify-center\">\n      <h3 class=\"font-bold text-3xl\">Backtest-result comparison</h3>\n    </div>\n    <div class=\"flex flex-col text-start ms-0 me-2 gap-2\">\n      <div class=\"flex flex-col flex-xl-row\">\n        <div class=\"px-0 xl:px-0 pt-2 xl:pt-0 xl:ps-1 flex-fill\">\n          <DataTable bordered :value=\"backtestResultStats\" size=\"small\" show-gridlines>\n            <Column\n              v-for=\"col in backtestResultFields\"\n              :key=\"col.key\"\n              :field=\"col.key\"\n              :label=\"col.label\"\n            >\n              <template #header>\n                <BacktestResultSelectEntry\n                  v-if=\"col.key && col.key in backtestResults\"\n                  :backtest-result=\"backtestResults[col.key]\"\n                />\n                <span v-else>{{ col.label }}</span>\n              </template>\n            </Column>\n          </DataTable>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport type { PeriodicBreakdown } from '@/types';\n\nconst props = defineProps<{\n  periodicBreakdown: PeriodicBreakdown;\n}>();\n\nconst periodicBreakdownSelections = computed(() => {\n  const res = [\n    { value: 'day', text: 'Days' },\n    { value: 'week', text: 'Weeks' },\n    { value: 'month', text: 'Months' },\n  ];\n  if (props.periodicBreakdown.year) {\n    res.push({ value: 'year', text: 'Years' });\n  }\n\n  return res;\n});\n\nconst periodicBreakdownPeriod = ref<string>('month');\n</script>\n\n<template>\n  <SelectButton\n    v-model=\"periodicBreakdownPeriod\"\n    :options=\"periodicBreakdownSelections\"\n    size=\"small\"\n    :allow-empty=\"false\"\n    class=\"m-2\"\n    option-label=\"text\"\n    option-value=\"value\"\n  ></SelectButton>\n  <DataTable size=\"small\" stacked=\"sm\" :value=\"periodicBreakdown[periodicBreakdownPeriod]\">\n    <Column field=\"date\" header=\"Date\"></Column>\n    <Column field=\"trades\" header=\"Trades\">\n      <template #body=\"{ data, field }\">\n        {{ data[field] ?? 'N/A' }}\n      </template>\n    </Column>\n    <Column field=\"profit_abs\" header=\"Total Profit\" :body=\"formatPrice\">\n      <template #body=\"{ data, field }\">\n        {{ data[field] ? data[field].toFixed(2) : 'N/A' }}\n      </template>\n    </Column>\n    <Column field=\"profit_factor\" header=\"Profit Factor\">\n      <template #body=\"{ data, field }\">\n        {{ formatPrice(data[field], 2) }}\n      </template>\n    </Column>\n    <Column field=\"wins\" header=\"Wins\"></Column>\n    <Column field=\"draws\" header=\"Draws\"></Column>\n    <Column field=\"losses\" header=\"Losses\">\n      <template #body=\"{ data }\">\n        {{ data.loses ?? data.losses ?? 'N/A' }}\n      </template>\n    </Column>\n    <Column field=\"wins\" header=\"Win Rate\">\n      <template #body=\"{ data }\">\n        {{\n          ((data.wins / (data.wins + data.draws + (data.loses ?? data.losses))) * 100).toFixed(2) +\n          '%'\n        }}\n      </template>\n    </Column>\n  </DataTable>\n</template>\n","<script setup lang=\"ts\">\nimport type { ExitReasonResults, PairResult } from '@/types';\n\ntype ResultsType = PairResult | ExitReasonResults;\ntype ResultsTypeWithKey = ResultsType & { key?: string | string[] };\nconst props = withDefaults(\n  defineProps<{\n    title: string;\n    results: ResultsType[];\n    stakeCurrency: string;\n    stakeCurrencyDecimals: number;\n    keyHeader?: string;\n    keyHeaders?: string[];\n  }>(),\n  {\n    keyHeader: '',\n    keyHeaders: () => [],\n  },\n);\n\nconst tableItems = computed<ResultsTypeWithKey[]>(() =>\n  props.results.map((v) => {\n    if (props.keyHeaders.length > 0) {\n      return {\n        ...v,\n        key:\n          typeof v['key'] === 'string' ? Array(props.keyHeaders.length).fill(v['key']) : v['key'],\n      };\n    }\n    return v;\n  }),\n);\n\nconst perTagReason = computed(() => {\n  const firstFields: {\n    key: string;\n    label: string;\n    formatter: (value: string, item: ResultsTypeWithKey) => string;\n  }[] = [];\n  if (props.keyHeaders.length > 0) {\n    // Keys could be an array\n    for (let i = 0; i < props.keyHeaders.length; i += 1) {\n      firstFields.push({\n        key: `key[${i}]`,\n        label: props.keyHeaders[i],\n        formatter: (value, item) =>\n          Array.isArray(value) ? value[i] : value || item['exit_reason'] || 'OTHER',\n      });\n    }\n  } else {\n    firstFields.push({\n      key: 'key',\n      label: props.keyHeader,\n      formatter: (value, item) => (value || item['exit_reason'] || 'OTHER') as string,\n    });\n  }\n  return firstFields;\n});\n\nconst settingsStore = useSettingsStore();\n\nconst metrics = computed(() =>\n  availableBacktestMetrics.value.filter(\n    (metric) =>\n      metric.field !== 'key' && settingsStore.backtestAdditionalMetrics.includes(metric.field),\n  ),\n);\n</script>\n<template>\n  <DraggableContainer>\n    <template #header>\n      <div class=\"flex flex-row w-full justify-between items-center\">\n        {{ title }}\n        <div>\n          Shown metrics:\n          <MultiSelect\n            id=\"backtestMetrics\"\n            v-model=\"settingsStore.backtestAdditionalMetrics\"\n            :options=\"availableBacktestMetrics\"\n            option-label=\"header\"\n            option-value=\"field\"\n            size=\"small\"\n          />\n        </div>\n      </div>\n    </template>\n    <DataTable size=\"small\" hover stacked=\"sm\" :value=\"tableItems\">\n      <Column v-for=\"col in perTagReason\" :key=\"col.key\" :field=\"col.key\" :header=\"col.label\">\n        <template #body=\"{ data }\">\n          {{ col.formatter(data['key'], data) }}\n        </template>\n      </Column>\n      <Column field=\"trades\" header=\"Trades\"></Column>\n      <Column field=\"profit_mean\" header=\"Avg Profit %\">\n        <template #body=\"{ data, field }\">\n          {{ formatPercent(data[field], 2) }}\n        </template>\n      </Column>\n      <Column field=\"profit_total_abs\" :header=\"`Tot Profit ${props.stakeCurrency}`\">\n        <template #body=\"{ data, field }\">\n          {{ formatPrice(data[field], props.stakeCurrencyDecimals) }}\n        </template>\n      </Column>\n      <Column field=\"profit_total\" header=\"Tot Profit %\">\n        <template #body=\"{ data, field }\">\n          {{ formatPercent(data[field], 2) }}\n        </template>\n      </Column>\n      <Column field=\"wins\" header=\"Wins\"></Column>\n      <Column field=\"draws\" header=\"Draws\"></Column>\n      <Column field=\"losses\" header=\"Losses\"></Column>\n\n      <Column v-for=\"col in metrics\" :key=\"col.field\" :field=\"col.field\" :header=\"col.header\">\n        <template #body=\"{ data, field }\">\n          {{ col.is_ratio ? formatPercent(data[field], 2) : formatPrice(data[field], 2) }}\n        </template>\n      </Column>\n    </DataTable>\n  </DraggableContainer>\n</template>\n","<script setup lang=\"ts\">\nimport type { StrategyBacktestResult } from '@/types';\n\nconst props = defineProps<{\n  backtestResult: StrategyBacktestResult;\n}>();\n\nconst backtestResultStats = computed(() => {\n  const tmp = generateBacktestMetricRows(props.backtestResult);\n  return formatObjectForTable({ value: tmp }, 'metric');\n});\n\nconst backtestResultSettings = computed(() => {\n  // Transpose Result into readable format\n  const tmp = generateBacktestSettingRows(props.backtestResult);\n\n  return formatObjectForTable({ value: tmp }, 'setting');\n});\n</script>\n\n<template>\n  <div class=\"px-0 w-full\">\n    <div class=\"flex justify-center\">\n      <h3 class=\"font-bold text-2xl mb-2\">\n        Backtest-result for {{ backtestResult.strategy_name }}\n      </h3>\n    </div>\n\n    <div class=\"flex flex-col text-start ms-0 me-2 gap-2\">\n      <div class=\"flex flex-col xl:flex-row\">\n        <div class=\"px-0 px-xl-0 pe-xl-1 grow\">\n          <DraggableContainer header=\"Strategy settings\">\n            <DataTable size=\"small\" :value=\"backtestResultSettings\">\n              <Column field=\"setting\" header=\"Setting\"></Column>\n              <Column field=\"value\" header=\"Value\"></Column>\n            </DataTable>\n          </DraggableContainer>\n        </div>\n        <div class=\"px-0 xl:px-0 pt-2 xl:pt-0 xl:ps-1 grow\">\n          <DraggableContainer header=\"Metrics\">\n            <DataTable size=\"small\" borderless :value=\"backtestResultStats\">\n              <Column field=\"metric\" header=\"Metric\" />\n              <Column field=\"value\" header=\"Value\" />\n            </DataTable>\n          </DraggableContainer>\n        </div>\n      </div>\n      <BacktestResultTablePer\n        title=\"Results per Enter tag\"\n        :results=\"backtestResult.results_per_enter_tag\"\n        :stake-currency=\"backtestResult.stake_currency\"\n        key-header=\"Enter Tag\"\n        :stake-currency-decimals=\"backtestResult.stake_currency_decimals\"\n      />\n\n      <BacktestResultTablePer\n        title=\"Results per Exit reason\"\n        :results=\"backtestResult.exit_reason_summary ?? []\"\n        :stake-currency=\"backtestResult.stake_currency\"\n        key-header=\"Exit Reason\"\n        :stake-currency-decimals=\"backtestResult.stake_currency_decimals\"\n      />\n\n      <BacktestResultTablePer\n        v-if=\"backtestResult.mix_tag_stats\"\n        title=\"Results Mixed Tag\"\n        :results=\"backtestResult.mix_tag_stats ?? []\"\n        :stake-currency=\"backtestResult.stake_currency\"\n        :key-headers=\"['Enter Tag', 'Exit Tag']\"\n        :stake-currency-decimals=\"backtestResult.stake_currency_decimals\"\n      />\n\n      <BacktestResultTablePer\n        title=\"Results per pair\"\n        :results=\"backtestResult.results_per_pair\"\n        :stake-currency=\"backtestResult.stake_currency\"\n        key-header=\"Pair\"\n        :stake-currency-decimals=\"backtestResult.stake_currency_decimals\"\n      />\n      <DraggableContainer v-if=\"backtestResult.periodic_breakdown\" header=\"Periodic breakdown\">\n        <BacktestResultPeriodBreakdown :periodic-breakdown=\"backtestResult.periodic_breakdown\">\n        </BacktestResultPeriodBreakdown>\n      </DraggableContainer>\n\n      <DraggableContainer header=\"Single trades\">\n        <TradeList\n          :trades=\"backtestResult.trades\"\n          :show-filter=\"true\"\n          :stake-currency=\"backtestResult.stake_currency\"\n        />\n      </DraggableContainer>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nconst locFreqaiModel = defineModel<string>();\nconst botStore = useBotStore();\n\nonMounted(() => {\n  if (botStore.activeBot.freqaiModelList.length === 0) {\n    botStore.activeBot.getFreqAIModelList();\n  }\n});\n</script>\n\n<template>\n  <div>\n    <div class=\"w-full flex\">\n      <Select\n        v-model=\"locFreqaiModel\"\n        :options=\"botStore.activeBot.freqaiModelList\"\n        fluid\n        size=\"small\"\n      >\n      </Select>\n      <div class=\"ms-2\">\n        <Button\n          severity=\"secondary\"\n          variant=\"outlined\"\n          size=\"small\"\n          @click=\"botStore.activeBot.getFreqAIModelList\"\n        >\n          <template #icon>\n            <i-mdi-refresh />\n          </template>\n        </Button>\n      </div>\n    </div>\n  </div>\n</template>\n","export const useBtStore = defineStore('btStore', {\n  state: () => {\n    return {\n      strategy: '',\n      selectedTimeframe: '',\n      selectedDetailTimeframe: '',\n      timerange: '',\n      maxOpenTrades: null as number | null,\n      stakeAmount: null as number | null,\n      startingCapital: null as number | null,\n      allowCache: true,\n      enableProtections: false,\n      stakeAmountUnlimited: false,\n      freqAI: {\n        enabled: false,\n        model: '',\n        identifier: '',\n      },\n    };\n  },\n  getters: {\n    canRunBacktest: (state) => state.strategy !== '',\n  },\n  actions: {},\n});\n\nif (import.meta.hot) {\n  import.meta.hot.accept(acceptHMRUpdate(useBtStore, import.meta.hot));\n}\n","<script setup lang=\"ts\">\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport type { BacktestPayload } from '@/types';\n\nimport { useBtStore } from '@/stores/btStore';\nconst botStore = useBotStore();\nconst btStore = useBtStore();\n\nfunction clickBacktest() {\n  const btPayload: BacktestPayload = {\n    strategy: btStore.strategy,\n    timerange: btStore.timerange,\n    enable_protections: btStore.enableProtections,\n  };\n  if (btStore.maxOpenTrades) {\n    btPayload.max_open_trades = btStore.maxOpenTrades;\n  }\n  if (btStore.stakeAmountUnlimited) {\n    btPayload.stake_amount = 'unlimited';\n  } else {\n    const stakeAmountLoc = Number(btStore.stakeAmount);\n    if (stakeAmountLoc) {\n      btPayload.stake_amount = stakeAmountLoc.toString();\n    }\n  }\n\n  const startingCapitalLoc = Number(btStore.startingCapital);\n  if (startingCapitalLoc) {\n    btPayload.dry_run_wallet = startingCapitalLoc;\n  }\n\n  if (btStore.selectedTimeframe) {\n    btPayload.timeframe = btStore.selectedTimeframe;\n  }\n  if (btStore.selectedDetailTimeframe) {\n    btPayload.timeframe_detail = btStore.selectedDetailTimeframe;\n  }\n  if (!btStore.allowCache) {\n    btPayload.backtest_cache = 'none';\n  }\n  if (btStore.freqAI.enabled) {\n    btPayload.freqaimodel = btStore.freqAI.model;\n    if (btStore.freqAI.identifier !== '') {\n      btPayload.freqai = { identifier: btStore.freqAI.identifier };\n    }\n  }\n\n  botStore.activeBot.startBacktest(btPayload);\n}\n</script>\n\n<template>\n  <div class=\"mb-2\">\n    <span>Strategy</span>\n    <StrategySelect v-model=\"btStore.strategy\"></StrategySelect>\n  </div>\n  <div\n    class=\"grid grid-cols-2 border border-surface-500 rounded-sm gap-y-2 gap-2 items-center p-1 pt-3\"\n    :disabled=\"botStore.activeBot.backtestRunning\"\n  >\n    <!-- Backtesting parameters -->\n    <h3 class=\"font-bold mb-2 col-span-2 text-center\">Backtesting parameters</h3>\n    <label for=\"timeframe-select\">Timeframe:</label>\n    <TimeframeSelect id=\"timeframe-select\" v-model=\"btStore.selectedTimeframe\" size=\"small\" />\n    <label for=\"timeframe-detail-select\" class=\"flex justify-end items-center gap-2\"\n      >Detail Timeframe:\n      <InfoBox\n        hint=\"Detail timeframe, to simulate intra-candle results. Not setting this will not use this functionality.\"\n      />\n    </label>\n    <TimeframeSelect\n      id=\"timeframe-detail-select\"\n      v-model=\"btStore.selectedDetailTimeframe\"\n      size=\"small\"\n      :below-timeframe=\"btStore.selectedTimeframe\"\n    />\n\n    <label for=\"max-open-trades\">Max open trades:</label>\n    <InputNumber\n      id=\"max-open-trades\"\n      v-model=\"btStore.maxOpenTrades\"\n      size=\"small\"\n      placeholder=\"Use strategy default\"\n      type=\"number\"\n    ></InputNumber>\n    <label for=\"starting-capital\">Starting capital:</label>\n    <InputNumber\n      id=\"starting-capital\"\n      v-model=\"btStore.startingCapital\"\n      size=\"small\"\n      placeholder=\"Use config default\"\n      type=\"number\"\n      :step=\"0.001\"\n    ></InputNumber>\n    <label for=\"stake-amount-bool\">Stake amount:</label>\n    <div class=\"flex items-center\">\n      <div class=\"flex basis-full\">\n        <BaseCheckbox id=\"stake-amount-bool\" v-model=\"btStore.stakeAmountUnlimited\"\n          >Unlimited stake</BaseCheckbox\n        >\n      </div>\n      <InputNumber\n        id=\"stake-amount\"\n        v-model=\"btStore.stakeAmount\"\n        placeholder=\"Use strategy default\"\n        :step=\"0.01\"\n        size=\"small\"\n        :disabled=\"btStore.stakeAmountUnlimited\"\n      ></InputNumber>\n    </div>\n\n    <label for=\"enable-protections\">Enable Protections:</label>\n    <BaseCheckbox id=\"enable-protections\" v-model=\"btStore.enableProtections\"></BaseCheckbox>\n    <template v-if=\"botStore.activeBot.botFeatures.backtestFreqAI\">\n      <label for=\"enable-cache\">Cache Backtest results:</label>\n      <BaseCheckbox id=\"enable-cache\" v-model=\"btStore.allowCache\"></BaseCheckbox>\n    </template>\n\n    <template v-if=\"botStore.activeBot.botFeatures.backtestFreqAI\">\n      <div class=\"flex justify-end items-center\">\n        <span class=\"me-2\">Enable FreqAI:</span>\n        <InfoBox\n          hint=\"Assumes freqAI configuration is setup in the configuration, and the strategy is a freqAI strategy. Will fail if that's not the case.\"\n        />\n      </div>\n      <BaseCheckbox id=\"enable-freqai\" v-model=\"btStore.freqAI.enabled\"></BaseCheckbox>\n\n      <template v-if=\"btStore.freqAI.enabled\">\n        <label for=\"freqai-identifier\">FreqAI identifier:</label>\n        <InputText\n          id=\"freqai-identifier\"\n          v-model=\"btStore.freqAI.identifier\"\n          placeholder=\"Use config default\"\n          size=\"small\"\n        ></InputText>\n      </template>\n      <template v-if=\"btStore.freqAI.enabled\">\n        <label for=\"freqai-model\">FreqAI Model:</label>\n        <FreqaiModelSelect id=\"freqai-model\" v-model=\"btStore.freqAI.model\"></FreqaiModelSelect>\n      </template>\n    </template>\n\n    <Divider class=\"col-span-2\" />\n    <TimeRangeSelect v-model=\"btStore.timerange\" class=\"mx-auto mt-2 col-span-2\"></TimeRangeSelect>\n  </div>\n\n  <h3 class=\"mt-3 font-bold text-2xl\">Backtesting summary</h3>\n  <div class=\"flex flex-wrap md:flex-nowrap justify-between md:justify-center\">\n    <Button\n      id=\"start-backtest\"\n      severity=\"primary\"\n      :disabled=\"\n        !btStore.canRunBacktest ||\n        botStore.activeBot.backtestRunning ||\n        !botStore.activeBot.canRunBacktest\n      \"\n      class=\"mx-1\"\n      @click=\"clickBacktest\"\n    >\n      Start backtest\n    </Button>\n    <Button\n      severity=\"secondary\"\n      :disabled=\"botStore.activeBot.backtestRunning || !botStore.activeBot.canRunBacktest\"\n      class=\"mx-1\"\n      @click=\"botStore.activeBot.pollBacktest\"\n    >\n      Load backtest result\n    </Button>\n    <Button\n      severity=\"secondary\"\n      class=\"mx-1\"\n      :disabled=\"!botStore.activeBot.backtestRunning\"\n      @click=\"botStore.activeBot.stopBacktest\"\n    >\n      Stop Backtest\n    </Button>\n    <Button\n      severity=\"secondary\"\n      class=\"mx-1\"\n      :disabled=\"botStore.activeBot.backtestRunning || !botStore.activeBot.canRunBacktest\"\n      @click=\"botStore.activeBot.removeBacktest\"\n    >\n      Reset Backtest\n    </Button>\n  </div>\n</template>\n<style lang=\"css\" scoped>\nlabel {\n  @apply text-right;\n}\n</style>\n","<script setup lang=\"ts\">\nimport type { MsgBoxObject } from '@/components/general/MessageBox.vue';\nimport MessageBox from '@/components/general/MessageBox.vue';\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport type { BacktestHistoryEntry } from '@/types';\nimport InfoBox from '../general/InfoBox.vue';\n\nconst botStore = useBotStore();\nconst msgBox = ref<typeof MessageBox>();\nconst filterText = ref('');\nconst filterTextDebounced = refDebounced(filterText, 350, { maxWait: 1000 });\n\nonMounted(() => {\n  botStore.activeBot.getBacktestHistory();\n});\n\nfunction deleteBacktestResult(result: BacktestHistoryEntry) {\n  const msg: MsgBoxObject = {\n    title: 'Delete result',\n    message: `Delete result ${result.filename} from disk?`,\n    accept: () => {\n      botStore.activeBot.deleteBacktestHistoryResult(result);\n    },\n  };\n  msgBox.value?.show(msg);\n}\n\nconst filteredList = computed(() =>\n  botStore.activeBot.backtestHistoryList.filter(\n    (r) =>\n      r.filename.toLowerCase().includes(filterTextDebounced.value.toLowerCase()) ||\n      r.strategy.toLowerCase().includes(filterTextDebounced.value.toLowerCase()),\n  ),\n);\nfunction rowClick(row) {\n  botStore.activeBot.getBacktestHistoryResult(row.data);\n}\n</script>\n\n<template>\n  <div>\n    <Button\n      class=\"float-end\"\n      title=\"Refresh\"\n      aria-label=\"Refresh\"\n      variant=\"outlined\"\n      severity=\"secondary\"\n      @click=\"botStore.activeBot.getBacktestHistory\"\n    >\n      <i-mdi-refresh />\n    </Button>\n    <p>\n      Load Historic results from disk. You can click on multiple results to load all of them into\n      freqUI.\n    </p>\n    <div v-if=\"botStore.activeBot.backtestHistoryList.length > 0\" class=\"flex align-center\">\n      <InputText\n        id=\"trade-filter\"\n        v-model=\"filterText\"\n        type=\"text\"\n        size=\"small\"\n        placeholder=\"Filter results\"\n        title=\"Filter results\"\n      />\n    </div>\n    <DataTable\n      v-if=\"botStore.activeBot.backtestHistoryList.length > 0\"\n      class=\"mt-2\"\n      responsive\n      size=\"small\"\n      scrollable\n      scroll-height=\"50rem\"\n      :virtual-scroller-options=\"{ itemSize: 46 }\"\n      show-gridlines\n      :value=\"filteredList\"\n      @row-click=\"rowClick\"\n    >\n      <Column field=\"strategy\" header=\"Strategy2\"></Column>\n      <Column field=\"timeframe\" header=\"Details\">\n        <template #body=\"{ data }\">\n          <strong>{{ data.timeframe }}</strong>\n          <span v-if=\"data.backtest_start_ts && data.backtest_end_ts\" class=\"ms-1\">\n            {{ timestampToTimeRangeString(data.backtest_start_ts * 1000) }}-{{\n              timestampToTimeRangeString(data.backtest_end_ts * 1000)\n            }}</span\n          >\n        </template>\n      </Column>\n      <Column field=\"backtest_start_time\" header=\"Backtest Time\">\n        <template #body=\"{ data }\">\n          <DateTimeTZ :date=\"data.backtest_start_time * 1000\" />\n        </template>\n      </Column>\n      <Column field=\"filename\" header=\"Filename\"></Column>\n      <Column field=\"actions\" header=\"Actions\">\n        <template #body=\"{ data }\">\n          <div class=\"flex items-center\">\n            <InfoBox\n              v-if=\"botStore.activeBot.botFeatures.backtestSetNotes\"\n              :class=\"data.notes ? 'opacity-100' : 'opacity-0'\"\n              :hint=\"data.notes ?? ''\"\n            ></InfoBox>\n            <Button\n              v-if=\"botStore.activeBot.botFeatures.backtestDelete\"\n              class=\"ms-1\"\n              size=\"small\"\n              title=\"Load this Result.\"\n              :disabled=\"data.run_id in botStore.activeBot.backtestHistory\"\n              @click.stop=\"botStore.activeBot.getBacktestHistoryResult(data)\"\n            >\n              <template #icon>\n                <i-mdi-arrow-right />\n              </template>\n            </Button>\n            <Button\n              v-if=\"botStore.activeBot.botFeatures.backtestDelete\"\n              class=\"ms-1\"\n              size=\"small\"\n              severity=\"secondary\"\n              title=\"Delete this Result.\"\n              :disabled=\"data.run_id in botStore.activeBot.backtestHistory\"\n              @click.stop=\"deleteBacktestResult(data)\"\n            >\n              <template #icon>\n                <i-mdi-delete />\n              </template>\n            </Button>\n          </div>\n        </template>\n      </Column>\n    </DataTable>\n  </div>\n  <MessageBox ref=\"msgBox\" />\n</template>\n","<script setup lang=\"ts\">\nimport type { BacktestResultInMemory, BacktestResultUpdate } from '@/types';\n\ndefineProps({\n  backtestHistory: {\n    required: true,\n    type: Object as () => Record<string, BacktestResultInMemory>,\n  },\n  selectedBacktestResultKey: { required: false, default: '', type: String },\n  canUseModify: { required: false, default: false, type: Boolean },\n});\nconst emit = defineEmits<{\n  selectionChange: [value: string];\n  removeResult: [value: string];\n  updateResult: [value: BacktestResultUpdate];\n}>();\n\nconst setBacktestResult = (key: string) => {\n  emit('selectionChange', key);\n};\n\nfunction confirmInput(run_id: string, result: BacktestResultInMemory) {\n  result.metadata.editing = !result.metadata.editing;\n  if (result.metadata.filename) {\n    emit('updateResult', {\n      run_id: run_id,\n      notes: result.metadata.notes ?? '',\n      filename: result.metadata.filename,\n      strategy: result.metadata.strategyName,\n    });\n  }\n}\n</script>\n\n<template>\n  <div class=\"flex flex-col items-stretch\">\n    <h3 class=\"font-bold text-2xl\">Available results:</h3>\n    <ul\n      class=\"ms-2 divide-y border-x border-surface-500 rounded-sm border-y divide-solid divide-surface-500\"\n    >\n      <li\n        v-for=\"[key, result] in Object.entries(backtestHistory)\"\n        :key=\"key\"\n        button\n        :class=\"{\n          'bg-primary dark:border-primary text-primary-contrast': key === selectedBacktestResultKey,\n        }\"\n        class=\"flex justify-between items-center py-1 px-1\"\n        @click=\"setBacktestResult(key)\"\n      >\n        <template v-if=\"!result.metadata.editing\">\n          <BacktestResultSelectEntry :backtest-result=\"result\" :can-use-modify=\"canUseModify\" />\n          <div class=\"flex\">\n            <Button\n              v-if=\"canUseModify\"\n              class=\"flex-nowrap\"\n              size=\"small\"\n              severity=\"secondary\"\n              title=\"Modify result notes.\"\n              @click.stop=\"result.metadata.editing = !result.metadata.editing\"\n            >\n              <template #icon>\n                <i-mdi-pencil />\n              </template>\n            </Button>\n            <Button\n              size=\"small\"\n              class=\"flex-nowrap\"\n              severity=\"secondary\"\n              title=\"Delete this Result from UI.\"\n              @click.stop=\"emit('removeResult', key)\"\n            >\n              <template #icon>\n                <i-mdi-delete />\n              </template>\n            </Button>\n          </div>\n        </template>\n        <template v-if=\"result.metadata.editing\">\n          <Textarea v-model=\"result.metadata.notes\" placeholder=\"notes\" size=\"small\"> </Textarea>\n\n          <Button size=\"small\" title=\"Confirm\" @click.stop=\"confirmInput(key, result)\">\n            <template #icon>\n              <i-mdi-check />\n            </template>\n          </Button>\n        </template>\n      </li>\n    </ul>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { useBtStore } from '@/stores/btStore';\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nenum BtRunModes {\n  run = 'run',\n  results = 'results',\n  visualize = 'visualize',\n  visualizesummary = 'visualize-summary',\n  compareresults = 'compare-results',\n  historicresults = 'historicResults',\n}\n\nconst botStore = useBotStore();\nconst btStore = useBtStore();\n\nconst hasBacktestResult = computed(() =>\n  botStore.activeBot.backtestHistory\n    ? Object.keys(botStore.activeBot.backtestHistory).length !== 0\n    : false,\n);\nconst hasMultiBacktestResult = computed(() =>\n  botStore.activeBot.backtestHistory\n    ? Object.keys(botStore.activeBot.backtestHistory).length > 1\n    : false,\n);\n\nconst timeframe = computed((): string => {\n  try {\n    return botStore.activeBot.selectedBacktestResult.timeframe;\n  } catch (err) {\n    return '';\n  }\n});\n\nconst showLeftBar = ref(false);\n\nconst btFormMode = ref<BtRunModes>(BtRunModes.run);\nconst pollInterval = ref<number | null>(null);\n\nconst selectBacktestResult = () => {\n  // Set parameters for this result\n  btStore.strategy = botStore.activeBot.selectedBacktestResult.strategy_name;\n  botStore.activeBot.getStrategy(btStore.strategy);\n  btStore.selectedTimeframe = botStore.activeBot.selectedBacktestResult.timeframe;\n  btStore.selectedDetailTimeframe =\n    botStore.activeBot.selectedBacktestResult.timeframe_detail || '';\n  // TODO: maybe this should not use timerange, but the actual backtest start/end results instead?\n  btStore.timerange = botStore.activeBot.selectedBacktestResult.timerange;\n};\n\nwatch(\n  () => botStore.activeBot.selectedBacktestResultKey,\n  () => {\n    selectBacktestResult();\n  },\n);\n\nonMounted(() => botStore.activeBot.getState());\nwatch(\n  () => botStore.activeBot.backtestRunning,\n  () => {\n    if (botStore.activeBot.backtestRunning === true) {\n      pollInterval.value = window.setInterval(botStore.activeBot.pollBacktest, 1000);\n    } else if (pollInterval.value) {\n      clearInterval(pollInterval.value);\n      pollInterval.value = null;\n    }\n  },\n);\n</script>\n\n<template>\n  <div class=\"flex flex-row pt-1 me-1 relative\" style=\"height: calc(100vh - 60px)\">\n    <div\n      class=\"flex md:flex-row h-full w-16\"\n      :class=\"{\n        'w-96!': showLeftBar,\n      }\"\n    >\n      <!-- Left bar -->\n      <div\n        v-if=\"btFormMode !== 'visualize'\"\n        class=\"me-3 flex flex-col fixed\"\n        style=\"max-height: calc(100vh - 60px)\"\n      >\n        <Button\n          class=\"self-start\"\n          aria-label=\"Close\"\n          size=\"small\"\n          severity=\"secondary\"\n          variant=\"outlined\"\n          @click=\"showLeftBar = !showLeftBar\"\n        >\n          <i-mdi-chevron-right v-if=\"!showLeftBar\" width=\"24\" height=\"24\" />\n          <i-mdi-chevron-left v-if=\"showLeftBar\" width=\"24\" height=\"24\" />\n        </Button>\n        <Transition name=\"fade\">\n          <BacktestResultSelect\n            v-if=\"showLeftBar\"\n            :backtest-history=\"botStore.activeBot.backtestHistory\"\n            :selected-backtest-result-key=\"botStore.activeBot.selectedBacktestResultKey\"\n            :can-use-modify=\"botStore.activeBot.botFeatures.backtestSetNotes\"\n            @selection-change=\"botStore.activeBot.setBacktestResultKey\"\n            @remove-result=\"botStore.activeBot.removeBacktestResultFromMemory\"\n            @update-result=\"botStore.activeBot.saveBacktestResultMetadata\"\n          />\n        </Transition>\n      </div>\n      <!-- End Left bar -->\n    </div>\n    <div class=\"flex flex-col w-full\">\n      <h2 class=\"ms-5 text-3xl font-bold\">Backtesting</h2>\n      <p v-if=\"!botStore.activeBot.canRunBacktest\">\n        Bot must be in webserver mode to enable Backtesting.\n      </p>\n      <div class=\"w-full\">\n        <Tabs value=\"run\" lazy>\n          <TabList>\n            <Tab\n              v-if=\"botStore.activeBot.botFeatures.backtestHistory\"\n              v-model=\"btFormMode\"\n              class=\"flex items-center\"\n              value=\"historicResults\"\n              :disabled=\"!botStore.activeBot.canRunBacktest\"\n              ><i-mdi-cloud-download class=\"me-2\" />Load Results</Tab\n            >\n            <Tab\n              v-model=\"btFormMode\"\n              class=\"flex items-center\"\n              value=\"run\"\n              :disabled=\"!botStore.activeBot.canRunBacktest\"\n              ><i-mdi-run-fast class=\"me-2\" />Run backtest</Tab\n            >\n            <Tab\n              id=\"bt-analyze-btn\"\n              v-model=\"btFormMode\"\n              class=\"flex items-center\"\n              value=\"results\"\n              :disabled=\"!hasBacktestResult\"\n              ><i-mdi-table-eye class=\"me-2\" />Analyze result</Tab\n            >\n            <Tab\n              v-if=\"hasMultiBacktestResult\"\n              v-model=\"btFormMode\"\n              class=\"flex items-center\"\n              value=\"compare-results\"\n              :disabled=\"!hasMultiBacktestResult\"\n              ><i-mdi-compare-horizontal class=\"me-2\" />Compare results</Tab\n            >\n            <Tab\n              v-model=\"btFormMode\"\n              class=\"flex items-center\"\n              value=\"visualize-summary\"\n              :disabled=\"!hasBacktestResult\"\n              ><i-mdi-chart-bell-curve-cumulative class=\"me-2\" />Visualize summary</Tab\n            >\n            <Tab\n              v-model=\"btFormMode\"\n              class=\"flex items-center\"\n              value=\"visualize\"\n              :disabled=\"!hasBacktestResult\"\n              ><i-mdi-chart-timeline-variant-shimmer class=\"me-2\" />Visualize result</Tab\n            >\n          </TabList>\n          <TabPanels>\n            <TabPanel value=\"historicResults\">\n              <BacktestHistoryLoad />\n            </TabPanel>\n            <TabPanel value=\"run\">\n              <BacktestRun />\n            </TabPanel>\n            <TabPanel value=\"results\">\n              <BacktestResultAnalysis\n                v-if=\"hasBacktestResult\"\n                :backtest-result=\"botStore.activeBot.selectedBacktestResult\"\n                class=\"flex-fill\"\n              />\n            </TabPanel>\n            <TabPanel value=\"compare-results\">\n              <BacktestResultComparison\n                v-if=\"hasMultiBacktestResult\"\n                :backtest-results=\"botStore.activeBot.backtestHistory\"\n                class=\"flex-fill\"\n              />\n            </TabPanel>\n            <TabPanel value=\"visualize-summary\">\n              <BacktestGraphs\n                v-if=\"hasBacktestResult\"\n                :trades=\"botStore.activeBot.selectedBacktestResult.trades\"\n                class=\"flex-fill\"\n              />\n            </TabPanel>\n            <TabPanel value=\"visualize\" l>\n              <BacktestResultChart\n                :timeframe=\"timeframe\"\n                :strategy=\"btStore.strategy\"\n                :timerange=\"btStore.timerange\"\n                :backtest-result=\"botStore.activeBot.selectedBacktestResult\"\n                :freqai-model=\"btStore.freqAI.enabled ? btStore.freqAI.model : undefined\"\n              />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n\n        <small v-show=\"botStore.activeBot.backtestRunning\" class=\"text-end bt-running-label\"\n          >Backtest running: {{ botStore.activeBot.backtestStep }}\n          {{ formatPercent(botStore.activeBot.backtestProgress, 2) }}</small\n        >\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"css\" scoped>\n.bt-running-label {\n  position: absolute;\n  right: 2em;\n  margin-top: 1em;\n}\n\n.flex-samesize-items {\n  flex: 1 1 0;\n  @media md {\n    flex: unset;\n  }\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: all 0.2s;\n}\n\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n\n.bt-config {\n  @media (min-width: 992px) {\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 75vw;\n  }\n}\n</style>\n"],"names":["style","classes","RadioButtonGroupStyle","BaseStyle","script$1","BaseEditableHolder","script","newValue","uuid","render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","mergeProps","renderSlot","props","__props","emit","__emit","botStore","useBotStore","selectedTrade","ref","sortDescendingOrder","sortMethod","sortMethodOptions","onTradeSelect","trade","sortedTrades","computed","field","a","b","ordersVisible","watch","_createElementBlock","_createElementVNode","_hoisted_1","_createVNode","_component_RadioButtonGroup","_unref","$event","_Fragment","_renderList","opt","_component_RadioButton","_toDisplayString","_hoisted_2","_hoisted_3","_component_Button","_createTextVNode","_openBlock","i","_hoisted_5","_hoisted_6","_hoisted_7","_component_DateTimeTZ","_component_TradeProfit","_createBlock","_component_ProfitPill","_component_i_mdi_chevron_right","_component_i_mdi_chevron_down","_Transition","_hoisted_8","_hoisted_9","o","order","isBarVisible","sliderPosition","navigateChartToTrade","refreshOHLCV","pair","columns","onMounted","_component_i_mdi_chevron_left","timerange","strategy","_hoisted_4","_component_PairSummary","backtestResult","_component_CandleChartContainer","timeframe","freqaiModel","_component_TradeListNav","t","_component_DraggableContainer","_component_TradeList","CHART_MARKET_CHANGE","use","LineChart","CalendarComponent","CanvasRenderer","GridComponent","DatasetComponent","DataZoomComponent","LegendComponent","TitleComponent","TooltipComponent","VisualMapComponent","settingsStore","useSettingsStore","marketChangeChart","marketChangeOptions","colDate","el","colRelMean","echartsGridDefault","dataZoomPartial","marketChangeData","ECharts","TransformComponent","BoxplotChart","ScatterChart","allTrades","winningTrades","losingTrades","chartOptions","params","formatDuration","statistics","minutes","hours","mins","trades","useAsyncState","_component_TradesLogChart","TradeDurationChart","_component_CumProfitChart","_component_MarketChangeChart","_component_ProfitDistributionChart","formatPercent","formatObjectForTable","originalobj","valueKey","acc","key","value","item","metric","val","existingItem","backtestResultStats","values","result","tmp","generateBacktestMetricRows","backtestResultFields","res","_component_DataTable","col","_component_Column","_component_BacktestResultSelectEntry","periodicBreakdownSelections","periodicBreakdownPeriod","_component_SelectButton","periodicBreakdown","_withCtx","data","formatPrice","tableItems","v","perTagReason","firstFields","metrics","availableBacktestMetrics","title","_component_MultiSelect","backtestResultSettings","generateBacktestSettingRows","_component_BacktestResultTablePer","_component_BacktestResultPeriodBreakdown","locFreqaiModel","_useModel","_component_Select","_component_i_mdi_refresh","useBtStore","defineStore","state","btStore","clickBacktest","btPayload","stakeAmountLoc","startingCapitalLoc","_component_StrategySelect","_component_TimeframeSelect","_component_InfoBox","_component_InputNumber","_component_BaseCheckbox","_component_InputText","_component_FreqaiModelSelect","_component_Divider","_component_TimeRangeSelect","msgBox","filterText","filterTextDebounced","refDebounced","deleteBacktestResult","msg","filteredList","r","rowClick","row","timestampToTimeRangeString","InfoBox","_normalizeClass","_component_i_mdi_arrow_right","_withModifiers","_component_i_mdi_delete","MessageBox","setBacktestResult","confirmInput","run_id","_component_i_mdi_pencil","_component_Textarea","_component_i_mdi_check","hasBacktestResult","hasMultiBacktestResult","showLeftBar","btFormMode","pollInterval","selectBacktestResult","_component_BacktestResultSelect","_component_Tabs","_component_TabList","_component_Tab","_component_i_mdi_cloud_download","_component_i_mdi_run_fast","_component_i_mdi_table_eye","_component_i_mdi_compare_horizontal","_component_i_mdi_chart_bell_curve_cumulative","_component_i_mdi_chart_timeline_variant_shimmer","_component_TabPanels","_component_TabPanel","_component_BacktestHistoryLoad","_component_BacktestRun","_component_BacktestResultAnalysis","_component_BacktestResultComparison","_component_BacktestGraphs","_component_BacktestResultChart"],"mappings":"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","x_google_ignoreList":[0,1,2]}