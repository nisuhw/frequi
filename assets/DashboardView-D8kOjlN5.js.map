{"version":3,"file":"DashboardView-D8kOjlN5.js","sources":["../../src/components/ftbot/BotComparisonList.vue","../../src/views/DashboardView.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport type { ProfitInterface, ComparisonTableItems } from '@/types';\n\nconst botStore = useBotStore();\n\nconst allToggled = computed<boolean>({\n  get: () => Object.values(botStore.botStores).every((i) => i.isSelected),\n  set: (val) => {\n    for (const botId in botStore.botStores) {\n      botStore.botStores[botId].isSelected = val;\n    }\n  },\n});\n\nconst tableItems = computed<ComparisonTableItems[]>(() => {\n  const val: ComparisonTableItems[] = [];\n  const summary: ComparisonTableItems = {\n    botId: undefined,\n    botName: 'Summary',\n    profitClosed: 0,\n    profitClosedRatio: undefined,\n    profitOpen: 0,\n    profitOpenRatio: undefined,\n    stakeCurrency: 'USDT',\n    wins: 0,\n    losses: 0,\n  };\n\n  Object.entries(botStore.allProfit).forEach(([k, v]: [k: string, v: ProfitInterface]) => {\n    const allStakes = botStore.allOpenTrades[k].reduce((a, b) => a + b.stake_amount, 0);\n    const profitOpenRatio =\n      botStore.allOpenTrades[k].reduce(\n        (a, b) => a + (b.total_profit_ratio ?? b.profit_ratio) * b.stake_amount,\n        0,\n      ) / allStakes;\n    const profitOpen = botStore.allOpenTrades[k].reduce(\n      (a, b) => a + (b.total_profit_abs ?? b.profit_abs ?? 0),\n      0,\n    );\n\n    // TODO: handle one inactive bot ...\n    val.push({\n      botId: k,\n      botName: botStore.availableBots[k].botName || botStore.availableBots[k].botId,\n      trades: `${botStore.allOpenTradeCount[k]} / ${\n        botStore.allBotState[k]?.max_open_trades || 'N/A'\n      }`,\n      profitClosed: v.profit_closed_coin,\n      profitClosedRatio: v.profit_closed_ratio || 0,\n      stakeCurrency: botStore.allBotState[k]?.stake_currency || '',\n      profitOpenRatio,\n      profitOpen,\n      wins: v.winning_trades,\n      losses: v.losing_trades,\n      balance: botStore.allBalance[k]?.total_bot ?? botStore.allBalance[k]?.total,\n      stakeCurrencyDecimals: botStore.allBotState[k]?.stake_currency_decimals || 3,\n      isDryRun: botStore.allBotState[k]?.dry_run,\n      isOnline: botStore.botStores[k]?.isBotOnline,\n    });\n    if (v.profit_closed_coin !== undefined) {\n      if (botStore.botStores[k].isSelected) {\n        // Summary should only include selected bots\n        summary.profitClosed += v.profit_closed_coin;\n        summary.profitOpen += profitOpen;\n        summary.wins += v.winning_trades;\n        summary.losses += v.losing_trades;\n        // summary.decimals = this.allBotState[k]?.stake_currency_decimals || summary.decimals;\n        // This will always take the last bot's stake currency\n        // And therefore may result in wrong values.\n        summary.stakeCurrency = botStore.allBotState[k]?.stake_currency || summary.stakeCurrency;\n      }\n    }\n  });\n  val.push(summary);\n  return val;\n});\n</script>\n\n<template>\n  <DataTable size=\"small\" :value=\"tableItems\">\n    <Column field=\"botName\" header=\"Bot\">\n      <template #body=\"{ data, field }\">\n        <div class=\"flex flex-row justify-between items-center\">\n          <div>\n            <BaseCheckbox\n              v-if=\"data.botId && botStore.botCount > 1\"\n              v-model=\"\n                botStore.botStores[(data as unknown as ComparisonTableItems).botId ?? ''].isSelected\n              \"\n              title=\"Show this bot in Dashboard\"\n              >{{ data[field] }}</BaseCheckbox\n            >\n            <BaseCheckbox\n              v-if=\"!data.botId && botStore.botCount > 1\"\n              v-model=\"allToggled\"\n              title=\"Toggle all bots\"\n              class=\"font-bold\"\n              >{{ data[field] }}</BaseCheckbox\n            >\n            <span v-if=\"botStore.botCount <= 1\">{{ data[field] }}</span>\n          </div>\n          <Badge\n            v-if=\"data.isOnline && data.isDryRun\"\n            class=\"items-center bg-green-800 text-slate-200\"\n            severity=\"success\"\n            >Dry</Badge\n          >\n          <Badge v-if=\"data.isOnline && !data.isDryRun\" class=\"items-center\" severity=\"warning\"\n            >Live</Badge\n          >\n          <Badge v-if=\"data.isOnline === false\" class=\"items-center\" severity=\"secondary\"\n            >Offline</Badge\n          >\n        </div>\n      </template>\n    </Column>\n    <Column field=\"trades\" header=\"Trades\"> </Column>\n    <Column header=\"Open Profit\">\n      <template #body=\"{ data }\">\n        <ProfitPill\n          v-if=\"data.profitOpen && data.botId != 'Summary'\"\n          :profit-ratio=\"(data as unknown as ComparisonTableItems).profitOpenRatio\"\n          :profit-abs=\"(data as unknown as ComparisonTableItems).profitOpen\"\n          :profit-desc=\"`Total Profit (Open and realized) ${formatPercent(\n            (data as ComparisonTableItems).profitOpenRatio ?? 0.0,\n          )}`\"\n          :stake-currency=\"(data as ComparisonTableItems).stakeCurrency\"\n        />\n      </template>\n    </Column>\n    <Column header=\"Closed Profit\">\n      <template #body=\"{ data }\">\n        <ProfitPill\n          v-if=\"data.profitClosed && data.botId != 'Summary'\"\n          :profit-ratio=\"(data as ComparisonTableItems).profitClosedRatio\"\n          :profit-abs=\"(data as ComparisonTableItems).profitClosed\"\n          :stake-currency=\"(data as unknown as ComparisonTableItems).stakeCurrency\"\n        />\n      </template>\n    </Column>\n    <Column field=\"balance\" header=\"Balance\">\n      <template #body=\"{ data }\">\n        <div v-if=\"data.balance\">\n          <span :title=\"(data as ComparisonTableItems).stakeCurrency\"\n            >{{\n              formatPrice(\n                (data as ComparisonTableItems).balance ?? 0,\n                (data as ComparisonTableItems).stakeCurrencyDecimals,\n              )\n            }}\n          </span>\n          <span class=\"text-sm\">{{\n            ` ${data.stakeCurrency}${data.isDryRun ? ' (dry)' : ''}`\n          }}</span>\n        </div>\n      </template>\n    </Column>\n    <Column field=\"winVsLoss\" header=\"W/L\">\n      <template #body=\"{ data }\">\n        <div v-if=\"data.losses !== undefined\">\n          <span class=\"text-profit\">{{ data.wins }}</span> /\n          <span class=\"text-loss\">{{ data.losses }}</span>\n        </div>\n      </template>\n    </Column>\n  </DataTable>\n</template>\n","<script setup lang=\"ts\">\nimport { DashboardLayout, findGridLayout, useLayoutStore } from '@/stores/layout';\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport type { GridItemData } from '@/types';\n\nconst botStore = useBotStore();\n\nconst layoutStore = useLayoutStore();\nconst currentBreakpoint = ref('');\n\nfunction breakpointChanged(newBreakpoint: string) {\n  // console.log('breakpoint:', newBreakpoint);\n  currentBreakpoint.value = newBreakpoint;\n}\nconst isResizableLayout = computed(() =>\n  ['', 'sm', 'md', 'lg', 'xl'].includes(currentBreakpoint.value),\n);\nconst isLayoutLocked = computed(() => {\n  return layoutStore.layoutLocked || !isResizableLayout.value;\n});\n\nconst gridLayoutData = computed((): GridItemData[] => {\n  if (isResizableLayout.value) {\n    return layoutStore.dashboardLayout;\n  }\n  return [...layoutStore.getDashboardLayoutSm];\n});\n\nfunction layoutUpdatedEvent(newLayout) {\n  if (isResizableLayout.value) {\n    console.log('newlayout', newLayout);\n    console.log('saving dashboard');\n    layoutStore.dashboardLayout = newLayout;\n  }\n}\n\nconst gridLayoutDaily = computed((): GridItemData => {\n  return findGridLayout(gridLayoutData.value, DashboardLayout.dailyChart);\n});\n\nconst gridLayoutBotComparison = computed((): GridItemData => {\n  return findGridLayout(gridLayoutData.value, DashboardLayout.botComparison);\n});\n\nconst gridLayoutAllOpenTrades = computed((): GridItemData => {\n  return findGridLayout(gridLayoutData.value, DashboardLayout.allOpenTrades);\n});\nconst gridLayoutAllClosedTrades = computed((): GridItemData => {\n  return findGridLayout(gridLayoutData.value, DashboardLayout.allClosedTrades);\n});\n\nconst gridLayoutCumChart = computed((): GridItemData => {\n  return findGridLayout(gridLayoutData.value, DashboardLayout.cumChartChart);\n});\nconst gridLayoutProfitDistribution = computed((): GridItemData => {\n  return findGridLayout(gridLayoutData.value, DashboardLayout.profitDistributionChart);\n});\nconst gridLayoutTradesLogChart = computed((): GridItemData => {\n  return findGridLayout(gridLayoutData.value, DashboardLayout.tradesLogChart);\n});\n\nconst responsiveGridLayouts = computed(() => {\n  return {\n    sm: layoutStore.getDashboardLayoutSm,\n  };\n});\n\nonMounted(async () => {\n  botStore.allGetDaily({ timescale: 30 });\n  // botStore.activeBot.getTrades();\n  botStore.activeBot.getOpenTrades();\n  botStore.activeBot.getProfit();\n});\n</script>\n\n<template>\n  <GridLayout\n    class=\"h-full w-full\"\n    style=\"padding: 1px\"\n    :row-height=\"50\"\n    :layout=\"gridLayoutData\"\n    :vertical-compact=\"false\"\n    :margin=\"[2, 2]\"\n    :responsive-layouts=\"responsiveGridLayouts\"\n    :is-resizable=\"!isLayoutLocked\"\n    :is-draggable=\"!isLayoutLocked\"\n    :responsive=\"true\"\n    :prevent-collision=\"true\"\n    :cols=\"{ lg: 12, md: 12, sm: 12, xs: 4, xxs: 2 }\"\n    :col-num=\"12\"\n    @layout-updated=\"layoutUpdatedEvent\"\n    @update:breakpoint=\"breakpointChanged\"\n  >\n    <template #default=\"{ gridItemProps }\">\n      <GridItem\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutDaily.i\"\n        :x=\"gridLayoutDaily.x\"\n        :y=\"gridLayoutDaily.y\"\n        :w=\"gridLayoutDaily.w\"\n        :h=\"gridLayoutDaily.h\"\n        :min-w=\"3\"\n        :min-h=\"4\"\n        drag-allow-from=\".drag-header\"\n      >\n        <DraggableContainer :header=\"`Profit over time ${botStore.botCount > 1 ? 'combined' : ''}`\">\n          <PeriodBreakdown multi-bot-view />\n        </DraggableContainer>\n      </GridItem>\n      <GridItem\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutBotComparison.i\"\n        :x=\"gridLayoutBotComparison.x\"\n        :y=\"gridLayoutBotComparison.y\"\n        :w=\"gridLayoutBotComparison.w\"\n        :h=\"gridLayoutBotComparison.h\"\n        :min-w=\"3\"\n        :min-h=\"4\"\n        drag-allow-from=\".drag-header\"\n      >\n        <DraggableContainer header=\"Bot comparison\">\n          <BotComparisonList />\n        </DraggableContainer>\n      </GridItem>\n      <GridItem\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutAllOpenTrades.i\"\n        :x=\"gridLayoutAllOpenTrades.x\"\n        :y=\"gridLayoutAllOpenTrades.y\"\n        :w=\"gridLayoutAllOpenTrades.w\"\n        :h=\"gridLayoutAllOpenTrades.h\"\n        :min-w=\"3\"\n        :min-h=\"4\"\n        drag-allow-from=\".drag-header\"\n      >\n        <DraggableContainer>\n          <template #header>\n            <div class=\"flex justify-content-center\">\n              Open Trades\n              <InfoBox\n                class=\"ms-2\"\n                hint=\"Open trades of all selected bots. Click on a trade to go to the trade page for that trade/bot.\"\n              />\n            </div>\n          </template>\n          <TradeList active-trades :trades=\"botStore.allOpenTradesSelectedBots\" multi-bot-view />\n        </DraggableContainer>\n      </GridItem>\n      <GridItem\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutCumChart.i\"\n        :x=\"gridLayoutCumChart.x\"\n        :y=\"gridLayoutCumChart.y\"\n        :w=\"gridLayoutCumChart.w\"\n        :h=\"gridLayoutCumChart.h\"\n        :min-w=\"3\"\n        :min-h=\"4\"\n        drag-allow-from=\".drag-header\"\n      >\n        <DraggableContainer header=\"Cumulative Profit\">\n          <CumProfitChart\n            :trades=\"botStore.allTradesSelectedBots\"\n            :open-trades=\"botStore.allOpenTradesSelectedBots\"\n            :show-title=\"false\"\n          />\n        </DraggableContainer>\n      </GridItem>\n      <GridItem\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutAllClosedTrades.i\"\n        :x=\"gridLayoutAllClosedTrades.x\"\n        :y=\"gridLayoutAllClosedTrades.y\"\n        :w=\"gridLayoutAllClosedTrades.w\"\n        :h=\"gridLayoutAllClosedTrades.h\"\n        :min-w=\"3\"\n        :min-h=\"4\"\n        drag-allow-from=\".drag-header\"\n      >\n        <DraggableContainer>\n          <template #header>\n            <div class=\"flex justify-content-center\">\n              Closed Trades\n              <InfoBox\n                class=\"ms-2\"\n                hint=\"Closed trades for all selected bots. Click on a trade to go to the trade page for that trade/bot.\"\n              />\n            </div>\n          </template>\n          <TradeList\n            :active-trades=\"false\"\n            show-filter\n            :trades=\"botStore.allClosedTradesSelectedBots\"\n            multi-bot-view\n          />\n        </DraggableContainer>\n      </GridItem>\n      <GridItem\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutProfitDistribution.i\"\n        :x=\"gridLayoutProfitDistribution.x\"\n        :y=\"gridLayoutProfitDistribution.y\"\n        :w=\"gridLayoutProfitDistribution.w\"\n        :h=\"gridLayoutProfitDistribution.h\"\n        :min-w=\"3\"\n        :min-h=\"4\"\n        drag-allow-from=\".drag-header\"\n      >\n        <DraggableContainer header=\"Profit Distribution\">\n          <ProfitDistributionChart :trades=\"botStore.allTradesSelectedBots\" :show-title=\"false\" />\n        </DraggableContainer>\n      </GridItem>\n      <GridItem\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutTradesLogChart.i\"\n        :x=\"gridLayoutTradesLogChart.x\"\n        :y=\"gridLayoutTradesLogChart.y\"\n        :w=\"gridLayoutTradesLogChart.w\"\n        :h=\"gridLayoutTradesLogChart.h\"\n        :min-w=\"3\"\n        :min-h=\"4\"\n        drag-allow-from=\".drag-header\"\n      >\n        <DraggableContainer header=\"Trades Log\">\n          <TradesLogChart :trades=\"botStore.allTradesSelectedBots\" :show-title=\"false\" />\n        </DraggableContainer>\n      </GridItem>\n    </template>\n  </GridLayout>\n</template>\n"],"names":["botStore","useBotStore","allToggled","computed","i","val","botId","tableItems","summary","k","v","allStakes","a","b","profitOpenRatio","profitOpen","_createBlock","_component_DataTable","_unref","_createVNode","_component_Column","_withCtx","data","field","_createElementVNode","_hoisted_1","_component_BaseCheckbox","_createTextVNode","_toDisplayString","$event","_createElementBlock","_hoisted_2","_component_Badge","_cache","_component_ProfitPill","formatPercent","_hoisted_3","formatPrice","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","layoutStore","useLayoutStore","currentBreakpoint","ref","breakpointChanged","newBreakpoint","isResizableLayout","isLayoutLocked","gridLayoutData","layoutUpdatedEvent","newLayout","gridLayoutDaily","findGridLayout","DashboardLayout","gridLayoutBotComparison","gridLayoutAllOpenTrades","gridLayoutAllClosedTrades","gridLayoutCumChart","gridLayoutProfitDistribution","gridLayoutTradesLogChart","responsiveGridLayouts","onMounted","_component_GridLayout","gridItemProps","_component_GridItem","_mergeProps","_component_DraggableContainer","_component_PeriodBreakdown","_component_BotComparisonList","_component_InfoBox","_component_TradeList","_component_CumProfitChart","_component_ProfitDistributionChart","_component_TradesLogChart"],"mappings":"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"}